{"version":3,"sources":["components/main-container/main-container.module.css","components/burger-constructor-item/burger-constructor-item.module.css","components/header-item/header-item.tsx","services/constants/menu-titles-data.ts","components/app-header/app-header.tsx","components/auth-form/auth-form.tsx","services/constants/api-config.tsx","helpers/tokens-helper.tsx","helpers/api.tsx","services/constants/user.ts","services/actions/user.ts","services/hooks.ts","components/loader/loader.tsx","pages/login.tsx","services/constants/profile-menu-titles.ts","components/orders-list-item/orders-list-item.tsx","helpers/time-helper.ts","helpers/orders-helper.tsx","components/orders-list/orders-list.tsx","services/constants/ws-auth-actions.ts","pages/order-history.tsx","pages/profile/profile.tsx","pages/register.tsx","pages/forgot-password.tsx","pages/reset-password.tsx","pages/not-found-error.tsx","components/protected-route/protected-route.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","services/constants/ingredients.ts","services/actions/ingredients.ts","services/constants/ws-actions.ts","components/main-container/main-container.tsx","components/orders-info/orders-info.tsx","pages/feed.tsx","components/burger-ingredients-item/burger-ingredients-item.tsx","components/burger-ingredients/burger-ingredients.tsx","services/constants/burger.ts","components/burger-constructor-item/burger-constructor-item.tsx","services/actions/burger.ts","images/check.svg","components/order-details/order-details.tsx","services/constants/order.ts","services/actions/order.ts","components/burger-constructor/burger-constructor.tsx","pages/constructor.tsx","components/order-details-item/order-details-item.tsx","pages/order.tsx","components/app/app.tsx","services/reducers/ingredients-reducer.ts","services/reducers/order-reducer.ts","services/reducers/burger-reducer.ts","services/reducers/user-reducers.ts","services/reducers/ws-reducer.ts","services/reducers/ws-auth-reducer.ts","services/reducers/index.ts","services/middlewares.ts","services/actions/ws-actions.ts","services/actions/ws-auth-actions.ts","services/store.ts","index.tsx","pages/profile/profile.module.css","components/order-details-item/order-details-item.module.css","components/orders-list-item/orders-list-item.module.css","components/ingredient-details/ingredient-details.module.css","components/auth-form/auth-form.module.css","components/modal/modal.module.css","components/orders-info/orders-info.module.css","components/order-details/oder-details.module.css","components/app-header/app-header.module.css","components/burger-ingredients-item/burger-ingredients-item.module.css","components/burger-constructor/burger-constructor.module.css","components/burger-ingredients/burger-ingredients.module.css","components/app/app.module.css","components/header-item/header-item.module.css","components/loader/loader.module.css","components/orders-list/orders-list.module.css","components/modal-overlay/modal-overlay.module.css"],"names":["module","exports","HeaderItem","title","Icon","path","match","useRouteMatch","iconType","isExact","uiKitStyles","className","exact","to","headerItemStyles","link","activeClassName","link_active","type","memo","menuItems","BurgerIcon","ListIcon","ProfileIcon","AppHeader","appHeaderStyles","container","navigation","list","logo","map","item","idx","React","AuthForm","buttonText","submitCallback","stateKeys","name","email","password","token","useState","formData","setFormData","onChange","e","target","value","bottomLinks","useMemo","authFormStyles","onSubmit","preventDefault","form","undefined","placeholder","size","API_URL","setCookie","props","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","document","cookie","getCookie","matches","RegExp","replace","decodeURIComponent","getRefreshToken","localStorage","getItem","assignTokens","accessToken","refreshToken","split","setItem","clearTokens","removeItem","getProductsData","a","fetch","response","ok","json","Promise","reject","sendOrderData","order","method","headers","Authorization","body","JSON","stringify","resetPasswordRequest","data","confirmPasswordReset","sendNewUserData","sendAuthData","getUserData","patchUserData","clearUserData","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","LOGOUT_USER_REQUEST","LOGOUT_USER_SUCCESS","LOGOUT_USER_FAILED","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","RESET_PASSWORD_CLEAR","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAILED","UPDATE_PASSWORD_CLEAR","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILED","loginUserRequestAction","loginUserSuccessAction","user","loginUserFailedAction","updateUserFailedAction","handleResetPasswordRequest","dispatch","then","res","console","log","catch","err","finally","handlePasswordUpdate","registerUser","registerUserSuccessAction","checkAuth","status","updateUserInfo","logoutUser","useSelector","selectorHook","useDispatch","dispatchHook","Loader","loaderStyles","loader","Login","state","currentUser","userLoginRequest","useLocation","useEffect","from","authUser","profileMenuTitles","OrdersListItem","statusStyles","authorized","images","parsedTime","number","price","_id","history","useHistory","location","color","message","styles","onClick","push","background","credentials","style","ingredients","position","zIndex","excessCount","length","index","key","String","image","backgroundImage","left","image_excess","renderIngredientsImages","parseTime","timestamp","dateObj","parse","hours","getHours","minutes","getMinutes","timezoneDiff","getTimezoneOffset","timezone","toString","Math","abs","day","diff","getDateString","date","today","round","getTime","calculateDaysDiff","completeOrdersData","ordersData","ingredientsList","newItem","fullIngredients","forEach","ingredientId","ingredient","find","i","image_large","createdAt","OrdersList","orders","reverse","sections","WS_CONNECTION_START_AUTH","WS_CONNECTION_STOP_AUTH","WS_CONNECTION_SUCCESS_AUTH","WS_CONNECTION_ERROR_AUTH","WS_CONNECTION_CLOSED_AUTH","WS_GET_MESSAGE_AUTH","OrderHistory","ordersInfo","wsAuthFeed","Profile","url","onCancel","useCallback","logout","profileForm","profileStyles","form_container","menu","list_item","Register","ForgotPassword","resetPasswordSuccess","pathname","referrer","ResetPassword","updatePasswordSuccess","action","NotFoundError","ProtectedRoute","children","rest","render","IngredientDetails","calories","carbohydrates","fat","proteins","ingredientDetailsStyles","details","src","alt","subtitle","modalStyles","nutrients","text","IngredientPage","ingredientsRequest","ingredientsFailed","useParams","canRenderIngredient","ModalOverlay","onClose","modalOverlayStyles","Modal","slim","headingType","heading","handleClose","modalsRoot","getElementById","goBack","escapeClose","event","addEventListener","removeEventListener","ReactDOM","createPortal","width","uiKitClass","header","renderHeading","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","ADD_CURRENT_INGREDIENT","DELETE_CURRENT_INGREDIENT","getIngredients","WS_CONNECTION_START","WS_CONNECTION_STOP","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","MainContainer","mainContainerStyles","OrdersInfo","total","totalToday","ordersReady","filter","ordersInProgress","ready","glow","Feed","wsFeed","BurgerIngredientsItem","count","onShowDetails","useDrag","collect","monitor","isDrag","isDragging","dragRef","burgerIngredientStyles","ref","counter","SUBTITLES","bun","main","sauce","BurgerIngredients","currentTab","setCurrentTab","scrollContainerRef","useRef","elemRefs","constructorItems","burger","switchTab","tab","el","scrollIntoView","behavior","openDetails","renderIngredientsSection","elements","orderCount","sectionTitle","id","current","burgerIngredientsStyles","items","tabs","active","onScroll","containerPosition","getBoundingClientRect","top","minDiff","Number","POSITIVE_INFINITY","highlightedTab","Object","keys","tabPosition","ADD_INGREDIENT","DELETE_INGREDIENT","REWRITE_INGREDIENTS","BurgerConstructorItem","moveItem","headItem","tailItem","dragIcon","uiKitSpacing","useDrop","accept","handlerId","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","bottom","hoverClientY","getClientOffset","y","dropRef","containerAttributes","burgerConstructorItemStyles","opacity","data-handler-id","isLocked","thumbnail","payload","OrderDetails","orderId","orderDetailsStyles","checkIconPath","check","PLACE_ORDER_REQUEST","PLACE_ORDER_SUCCESS","PLACE_ORDER_FAILED","DELETE_ORDER_ID","placeOrder","BurgerConstructor","isDetailsOpen","setIsDetailsOpen","currentOrderId","drop","ingredientData","isHover","isOver","dropTarget","otherItems","moveCard","storageArrCopy","dragItem","newArr","update","$splice","resultArr","concat","otherElements","uuid","orderTotalValue","reduce","sum","burgerConstructorStyles","bordered","Constructor","DndProvider","backend","HTML5Backend","OrderDetailsItem","withoutModal","marginBottom","textAlign","ingredient_title","ingredient_name","OrderPage","orderData","getOrderData","App","appStyles","app","ingredientsState","currentIngredient","orderInitialState","currentOrderRequest","currentOrderFailed","burgerConstructorInitialState","userInitialState","userRegisterRequest","userRegisterFailed","userLoginFailed","userLogoutRequest","userLogoutFailed","resetPasswordFailed","updatePasswordRequest","updatePasswordFailed","updateProfileRequest","updateProfileSuccess","updateProfileFailed","initialState","wsConnected","error","rootReducer","combineReducers","random","filteredItems","newItems","splice","findIndex","socketMiddleWare","wsUrl","wsActions","store","socket","next","wsInit","onOpen","onError","onMessage","wsSendMessage","wsStop","WebSocket","onopen","onerror","onmessage","parsedData","restParsedData","success","onclose","send","close","wsAuthActions","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","StrictMode","basename"],"mappings":"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","file":"static/js/main.2bfcf67c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main-container_container__zxfwV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"burger-constructor-item_container__zT06j\",\"item\":\"burger-constructor-item_item__3ZkuA\"};","import { memo, FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useRouteMatch } from \"react-router-dom\";\nimport { TIconProps } from '@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons/utils';\n\nimport headerItemStyles from './header-item.module.css'\n\ntype Props = {\n  title: string;\n  Icon: ({ type }: TIconProps) => JSX.Element;\n  path: string;\n}\n\nconst HeaderItem: FC<Props> = ({ title, Icon, path }) => {\n  const match = useRouteMatch(path);\n\n  const iconType = match?.isExact ? 'primary' : 'secondary';\n\n  const uiKitStyles = {\n    listItem: 'pl-5 pr-5',\n    text: 'ml-2 text text_type_main-medium',\n  }\n\n  return (\n    <li\n      className={uiKitStyles.listItem}\n    >\n      <NavLink\n        exact\n        to={path}\n        className={`${uiKitStyles.text} ${headerItemStyles.link}`}\n        activeClassName={headerItemStyles.link_active}\n      >\n        <Icon type={iconType} />\n        {title}\n      </NavLink>\n    </li>\n  );\n}\n\nexport default memo(HeaderItem);","import { BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nexport const menuItems = [\n    { title: 'Конструктор', Icon: BurgerIcon, path: '/' },\n    { title: 'Лента заказов', Icon: ListIcon, path: '/feed' },\n    { title: 'Личный кабинет', Icon: ProfileIcon, path: '/profile' },\n];","import React, { FC } from 'react';\nimport { Logo } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { NavLink } from 'react-router-dom';\n\nimport appHeaderStyles from './app-header.module.css';\n\nimport HeaderItem from '../header-item/header-item';\nimport { menuItems } from \"../../services/constants/menu-titles-data\";\n\nconst AppHeader: FC = () => {\n  const renderMenuItems = () => {\n    return menuItems.map((item, idx) => {\n      return (\n        <HeaderItem\n          key={idx}\n          title={item.title}\n          Icon={item.Icon}\n          path={item.path}\n        />\n      )\n    });\n  }\n\n  return (\n    <header className={`${appHeaderStyles.container} p-4`}>\n      <nav className={appHeaderStyles.navigation}>\n        <ul className={appHeaderStyles.list}>\n          <li className={appHeaderStyles.logo}>\n            <NavLink to='/'>\n              <Logo/>\n            </NavLink>\n          </li>\n          {renderMenuItems()}\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default React.memo(AppHeader);","import React, { useState, ChangeEvent, useMemo, FC, SyntheticEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { EmailInput, PasswordInput, Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { TAuthFormData } from '../../services/types/auth-form-types';\nimport authFormStyles from './auth-form.module.css';\n\ntype Props = {\n  type: string\n  submitCallback?: (data: TAuthFormData) => void\n}\n\nconst AuthForm: FC<Props> = ({ type, submitCallback }) => {\n  let stateKeys: TAuthFormData = {name: '', email: ''};\n  let buttonText;\n  let title;\n  switch (type) {\n    case('login'):\n      title = 'Вход'\n      stateKeys = {email: '', password: ''}\n      buttonText = 'Войти'\n      break\n    case('register'):\n      title = 'Регистрация'\n      stateKeys = {name: '', email: '', password: ''}\n      buttonText = 'Зарегистрироваться'\n      break\n    case('forgot'):\n      title = 'Восстановление пароля'\n      stateKeys = {email: ''}\n      buttonText = 'Восстановить'\n      break\n    case('reset'):\n      title = 'Восстановление пароля'\n      stateKeys = {password: '', token: ''}\n      buttonText = 'Сохранить'\n      break\n  }\n  const [formData, setFormData] = useState<TAuthFormData>({...stateKeys});\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setFormData({...formData, [e.target.name]: e.target.value});\n  }\n\n  const submit = (e: SyntheticEvent) => {\n    e.preventDefault();\n    if (submitCallback) {\n      submitCallback(formData);\n    }\n  }\n\n  const bottomLinks = useMemo(() => {\n    switch (type) {\n      case('login'):\n        return (\n          <>\n            <p className='text text_type_main-default text_color_inactive mb-6'>\n              Вы — новый пользователь?{' '}\n              <Link\n                to='/register'\n                className={`text text_type_main-default ${authFormStyles.link}`}\n              >\n                Зарегистрироваться\n              </Link>\n            </p>\n            <p className='text text_type_main-default text_color_inactive'>\n              Забыли пароль?{' '}\n              <Link\n                to='/forgot-password'\n                className={`text text_type_main-default ${authFormStyles.link}`}\n              >\n                Восстановить паролль\n              </Link>\n            </p>\n          </>\n        )\n      case('register'):\n        return (\n          <p className='text text_type_main-default text_color_inactive mb-6'>\n            Уже зарегистрированы?{' '}\n            <Link\n              to='/login'\n              className={`text text_type_main-default ${authFormStyles.link}`}\n            >\n              Войти\n            </Link>\n          </p>\n        )\n      case('forgot'):\n      case('reset'):\n        return (\n          <p className='text text_type_main-default text_color_inactive mb-6'>\n            Вспомнили пароль?{' '}\n            <Link\n              to='/login'\n              className={`text text_type_main-default ${authFormStyles.link}`}\n            >\n              Войти\n            </Link>\n          </p>\n        )\n    }\n  }, [type]);\n\n  return (\n    <section className={authFormStyles.container}>\n      <h2 className=\"text text_type_main-medium mb-6\">{title}</h2>\n      <form onSubmit={submit} className={authFormStyles.form}>\n        {'name' in formData && formData.name !== undefined && <Input value={formData.name} name={'name'} onChange={onChange} placeholder={'Имя'} />}\n        {'email' in formData && formData.email !== undefined && <EmailInput value={formData.email} name={'email'} onChange={onChange}/>}\n        {'password' in formData && formData !== undefined && <PasswordInput value={formData.password} name={'password'} onChange={onChange}/>}\n        {'token' in formData && formData !== undefined && <Input value={formData.token} name={'token'} onChange={onChange} placeholder={'Код из письма'}/>}\n        <Button type='primary' size=\"medium\">{buttonText}</Button>\n      </form>\n      {bottomLinks}\n    </section>\n  )\n}\n\nexport default React.memo(AuthForm);","export const API_URL = 'https://norma.nomoreparties.space/api';\nexport const API_WS_ALL = 'wss://norma.nomoreparties.space/orders/all';\nexport const API_WS_AUTH = 'wss://norma.nomoreparties.space/orders';\n","export function setCookie(name: string, value: string, props?: any) {\n  props = {\n    path: '/',\n    ...props\n  };\n  if (props.expires instanceof Date) {\n    props.expires = props.expires.toUTCString();\n  }\n  let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\n  for (let optionKey in props) {\n    updatedCookie += \"; \" + optionKey;\n    let optionValue = props[optionKey];\n    if (optionValue !== true) {\n      updatedCookie += \"=\" + optionValue;\n    }\n  }\n  document.cookie = updatedCookie;\n}\n\nexport function getCookie(name: string) {\n  const matches = document.cookie.match(\n    new RegExp('(?:^|; )' + name.replace(/([.$?*|{}()[\\]\\\\/+^])/g, '\\\\$1') + '=([^;]*)')\n  );\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport function deleteCookie(name: string) {\n  setCookie(name, \"\", {\n    'max-age': -1\n  })\n}\n\nexport function getRefreshToken() {\n  return localStorage.getItem('token');\n}\n\nexport function assignTokens(accessToken: string, refreshToken: string) {\n  accessToken = accessToken.split('Bearer ')[1];\n  setCookie('token', accessToken);\n  localStorage.setItem('token', refreshToken);\n}\n\nexport function clearTokens() {\n  deleteCookie('token');\n  localStorage.removeItem('token');\n}","import { API_URL } from '../services/constants/api-config';\nimport { OrderDataTypes } from '../services/types/order-data-types';\nimport { TAuthFormData } from '../services/types/auth-form-types';\nimport { getCookie, getRefreshToken } from './tokens-helper';\n\nconst getProductsData = async () => {\n  const response = await fetch(`${API_URL}/ingredients`);\n  return response.ok ? await response.json() : await Promise.reject(response);\n}\n\nconst sendOrderData = async (order: OrderDataTypes) => {\n  const response = await fetch(`${API_URL}/orders`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8',\n      Authorization: 'Bearer ' + getCookie('token'),\n    },\n    body: JSON.stringify(order)\n  });\n  return response.ok ? await response.json() : await Promise.reject(response);\n}\n\nconst resetPasswordRequest = async (data: TAuthFormData) => {\n  const response = await fetch(`${API_URL}/password-reset`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify(data)\n  });\n  return response.ok ? await response.json() : await Promise.reject(response);\n}\n\nconst confirmPasswordReset = async (data: TAuthFormData) => {\n  const response = await fetch(`${API_URL}/password-reset/reset`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify(data)\n  });\n  return response.ok ? await response.json() : await Promise.reject(response);\n}\n\nconst sendNewUserData = async (data: TAuthFormData) => {\n  const response = await fetch(`${API_URL}/auth/register`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify(data)\n  });\n  return response.ok ? await response.json() : await Promise.reject(response);\n}\n\nconst sendAuthData = async (data: TAuthFormData) => {\n  const response = await fetch(`${API_URL}/auth/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify(data)\n  });\n  return response.ok ? await response.json() : await Promise.reject(response);\n}\n\nconst getUserData = async () => {\n  const response = await fetch(`${API_URL}/auth/user`, {\n    headers: {\n      Authorization: 'Bearer ' + getCookie('token'),\n    }\n  });\n  return response.ok ? await response.json() : await Promise.reject(response);\n}\n\nconst patchUserData = async (data: TAuthFormData) => {\n  const response = await fetch(`${API_URL}/auth/user`, {\n    method: \"PATCH\",\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8',\n      Authorization: 'Bearer ' + getCookie('token'),\n    }\n  });\n  return response.ok ? await response.json() : await Promise.reject(response);\n}\n\nconst refreshToken = async (token: string | null) => {\n  const body = { token: token };\n  const response = await fetch(`${API_URL}/auth/token`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify(body)\n  });\n  return response.ok ? await response.json() : await Promise.reject(response);\n}\n\nconst clearUserData = async () => {\n  const body = { token: getRefreshToken() };\n  const response = await fetch(`${API_URL}/auth/logout`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n    body: JSON.stringify(body)\n  });\n  return response.ok ? await response.json() : await Promise.reject(response);\n}\n\nexport {\n  getProductsData,\n  sendOrderData,\n  resetPasswordRequest,\n  confirmPasswordReset,\n  sendNewUserData,\n  sendAuthData,\n  getUserData,\n  patchUserData,\n  clearUserData,\n  refreshToken\n}","export const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST' as const;\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'as const;\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED'as const;\n\nexport const LOGIN_USER_REQUEST = 'LOGIN_USER_REQUEST'as const;\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS'as const;\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED'as const;\n\nexport const LOGOUT_USER_REQUEST = 'LOGOUT_USER_REQUEST'as const;\nexport const LOGOUT_USER_SUCCESS = 'LOGOUT_USER_SUCCESS'as const;\nexport const LOGOUT_USER_FAILED = 'LOGOUT_USER_FAILED'as const;\n\nexport const RESET_PASSWORD_REQUEST = 'RESET_PASSWORD_REQUEST'as const;\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS'as const;\nexport const RESET_PASSWORD_FAILED = 'RESET_PASSWORD_FAILED'as const;\nexport const RESET_PASSWORD_CLEAR = 'RESET_PASSWORD_CLEAR'as const;\n\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST'as const;\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'as const;\nexport const UPDATE_PASSWORD_FAILED = 'UPDATE_PASSWORD_FAILED'as const;\nexport const UPDATE_PASSWORD_CLEAR = 'UPDATE_PASSWORD_CLEAR'as const;\n\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'as const;\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'as const;\nexport const UPDATE_USER_FAILED = 'UPDATE_USER_FAILED'as const;","import { TNewUserData, TAuthFormData } from '../types/auth-form-types';\nimport {\n  sendNewUserData,\n  sendAuthData,\n  getUserData,\n  clearUserData,\n  refreshToken,\n  resetPasswordRequest,\n  confirmPasswordReset, patchUserData\n} from '../../helpers/api';\nimport { assignTokens, clearTokens, getRefreshToken } from '../../helpers/tokens-helper';\n\nimport {\n  REGISTER_USER_REQUEST,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAILED,\n  LOGIN_USER_REQUEST,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_FAILED,\n  LOGOUT_USER_REQUEST,\n  LOGOUT_USER_SUCCESS,\n  LOGOUT_USER_FAILED,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_FAILED,\n  RESET_PASSWORD_CLEAR,\n  UPDATE_PASSWORD_REQUEST,\n  UPDATE_PASSWORD_SUCCESS,\n  UPDATE_PASSWORD_FAILED,\n  UPDATE_PASSWORD_CLEAR,\n  UPDATE_USER_REQUEST,\n  UPDATE_USER_SUCCESS,\n  UPDATE_USER_FAILED,\n} from '../constants/user';\nimport { AppDispatch, AppThunk } from '../types';\n\nexport interface IRegisterUserRequestAction {\n  readonly type: typeof REGISTER_USER_REQUEST;\n}\n\nexport const registerUserRequestAction = (): IRegisterUserRequestAction => ({\n  type: REGISTER_USER_REQUEST\n});\n\nexport interface IRegisterUserSuccessAction {\n  readonly type: typeof REGISTER_USER_SUCCESS;\n  readonly user: TNewUserData;\n}\n\nexport const registerUserSuccessAction = (user: TNewUserData): IRegisterUserSuccessAction => ({\n  type: REGISTER_USER_SUCCESS,\n  user,\n});\n\nexport interface IRegisterUserFailedAction {\n  readonly type: typeof REGISTER_USER_FAILED;\n}\n\nexport const registerUserFailedAction = (): IRegisterUserFailedAction => ({\n  type: REGISTER_USER_FAILED\n});\n\nexport interface ILoginUserRequestAction {\n  readonly type: typeof LOGIN_USER_REQUEST;\n}\n\nexport const loginUserRequestAction = (): ILoginUserRequestAction => ({\n  type: LOGIN_USER_REQUEST\n});\n\nexport interface ILoginUserSuccessAction {\n  readonly type: typeof LOGIN_USER_SUCCESS;\n  readonly user: TNewUserData;\n}\n\nexport const loginUserSuccessAction = (user: TNewUserData): ILoginUserSuccessAction => ({\n  type: LOGIN_USER_SUCCESS,\n  user\n});\n\nexport interface ILoginUserFailedAction {\n  readonly type: typeof LOGIN_USER_FAILED;\n}\n\nexport const loginUserFailedAction = (): ILoginUserFailedAction => ({\n  type: LOGIN_USER_FAILED,\n});\n\nexport interface ILogoutUserRequestAction {\n  readonly type: typeof LOGOUT_USER_REQUEST;\n}\n\nexport const logoutUserRequestAction = (): ILogoutUserRequestAction => ({\n  type: LOGOUT_USER_REQUEST\n});\n\nexport interface ILogoutUserSuccessAction {\n  readonly type: typeof LOGOUT_USER_SUCCESS;\n}\n\nexport const logoutUserSuccessAction = (): ILogoutUserSuccessAction => ({\n  type: LOGOUT_USER_SUCCESS,\n});\n\nexport interface ILogoutUserFailedAction {\n  readonly type: typeof LOGOUT_USER_FAILED;\n}\n\nexport const logoutUserFailedAction = (): ILogoutUserFailedAction => ({\n  type: LOGOUT_USER_FAILED,\n});\n\nexport interface IResetPasswordRequestAction {\n  readonly type: typeof RESET_PASSWORD_REQUEST;\n}\n\nexport const resetPasswordRequestAction = (): IResetPasswordRequestAction => ({\n  type: RESET_PASSWORD_REQUEST,\n});\n\nexport interface IResetPasswordSuccessAction {\n  readonly type: typeof RESET_PASSWORD_SUCCESS;\n}\n\nexport const resetPasswordSuccessAction = (): IResetPasswordSuccessAction => ({\n  type: RESET_PASSWORD_SUCCESS,\n});\n\nexport interface IResetPasswordFailedAction {\n  readonly type: typeof RESET_PASSWORD_FAILED;\n}\n\nexport const resetPasswordFailedAction = (): IResetPasswordFailedAction => ({\n  type: RESET_PASSWORD_FAILED,\n});\n\nexport interface IResetPasswordClearAction {\n  readonly type: typeof RESET_PASSWORD_CLEAR;\n}\n\nexport const resetPasswordClearAction = (): IResetPasswordClearAction => ({\n  type: RESET_PASSWORD_CLEAR,\n});\n\nexport interface IUpdatePasswordRequestAction {\n  readonly type: typeof UPDATE_PASSWORD_REQUEST;\n}\n\nexport const updatePasswordRequestAction = (): IUpdatePasswordRequestAction => ({\n  type: UPDATE_PASSWORD_REQUEST,\n});\n\nexport interface IUpdatePasswordSuccessAction {\n  readonly type: typeof UPDATE_PASSWORD_SUCCESS;\n}\n\nexport const updatePasswordSuccessAction = (): IUpdatePasswordSuccessAction => ({\n  type: UPDATE_PASSWORD_SUCCESS,\n});\n\nexport interface IUpdatePasswordFailedAction {\n  readonly type: typeof UPDATE_PASSWORD_FAILED;\n}\n\nexport const updatePasswordFailedAction = (): IUpdatePasswordFailedAction => ({\n  type: UPDATE_PASSWORD_FAILED,\n});\n\nexport interface IUpdatePasswordClearAction {\n  readonly type: typeof UPDATE_PASSWORD_CLEAR\n}\n\nexport const updatePasswordClearAction = (): IUpdatePasswordClearAction => ({\n  type: UPDATE_PASSWORD_CLEAR\n})\n\nexport interface IUpdateUserRequestAction {\n  readonly type: typeof UPDATE_USER_REQUEST;\n}\n\nexport const updateUserRequestAction = (): IUpdateUserRequestAction => ({\n  type: UPDATE_USER_REQUEST,\n});\n\nexport interface IUpdateUserSuccessAction {\n  readonly type: typeof UPDATE_USER_SUCCESS;\n  readonly user: TNewUserData\n}\n\nexport const updateUserSuccessAction = (user: TNewUserData): IUpdateUserSuccessAction => ({\n  type: UPDATE_USER_SUCCESS,\n  user,\n});\n\nexport interface IUpdateUserFailedAction {\n  readonly type: typeof UPDATE_USER_FAILED;\n}\n\nexport const updateUserFailedAction = (): IUpdateUserFailedAction => ({\n  type: UPDATE_USER_FAILED,\n});\n\nexport type TUserActions =\n  IRegisterUserRequestAction\n  | IRegisterUserSuccessAction\n  | IRegisterUserFailedAction\n  | ILoginUserRequestAction\n  | ILoginUserSuccessAction\n  | ILoginUserFailedAction\n  | ILogoutUserRequestAction\n  | ILogoutUserSuccessAction\n  | ILogoutUserFailedAction\n  | IResetPasswordRequestAction\n  | IResetPasswordSuccessAction\n  | IResetPasswordFailedAction\n  | IResetPasswordClearAction\n  | IUpdatePasswordRequestAction\n  | IUpdatePasswordSuccessAction\n  | IUpdatePasswordFailedAction\n  | IUpdatePasswordClearAction\n  | IUpdateUserRequestAction\n  | IUpdateUserSuccessAction\n  | IUpdateUserFailedAction\n\n\nexport const handleResetPasswordRequest: AppThunk = (data: TAuthFormData) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(resetPasswordRequestAction());\n    resetPasswordRequest(data)\n      .then(res => {\n        console.log('reset password request res: ', res);\n        dispatch(resetPasswordSuccessAction());\n      })\n      .catch(err => {\n        console.log('reset password request err: ', err);\n        dispatch(resetPasswordFailedAction());\n      })\n      .finally(() => {\n        console.log('reset pass finally...');\n        dispatch(resetPasswordClearAction())\n      });\n  }\n}\n\nexport const handlePasswordUpdate: AppThunk = (data: TAuthFormData) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(updatePasswordRequestAction());\n    confirmPasswordReset(data)\n      .then(res => {\n        console.log('confirm password reset res: ', res);\n        dispatch(updatePasswordSuccessAction());\n      })\n      .catch(err => {\n        console.log('confirm password reset err: ', err);\n        dispatch(updatePasswordFailedAction());\n      })\n      .finally(() => {\n        console.log('update pass finally...');\n        dispatch(updatePasswordClearAction());\n      });\n  }\n}\n\nexport const registerUser: AppThunk = (data: TAuthFormData) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(registerUserRequestAction());\n    sendNewUserData(data)\n      .then(res => {\n        console.log('user register res: ', res);\n        const { user, accessToken, refreshToken } = res;\n        dispatch(registerUserSuccessAction(user));\n        assignTokens(accessToken, refreshToken);\n      })\n      .catch(err => {\n        console.log('user register res: ', err);\n        dispatch(registerUserFailedAction());\n      })\n  }\n}\n\nexport const authUser: AppThunk = (data: TAuthFormData) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(loginUserRequestAction());\n    sendAuthData(data)\n      .then(res => {\n        console.log('user auth res: ', res);\n        const { user, accessToken, refreshToken } = res;\n        dispatch(loginUserSuccessAction(user));\n        assignTokens(accessToken, refreshToken);\n      })\n      .catch(err => {\n        console.log('user auth res: ', err);\n        dispatch(loginUserFailedAction());\n      })\n  }\n}\n\nexport const checkAuth: AppThunk = () => {\n  return function (dispatch: AppDispatch | AppThunk) {\n    dispatch(loginUserRequestAction());\n    getUserData()\n      .then(res => {\n        console.log('check user method res:', res);\n        dispatch(loginUserSuccessAction(res.user));\n      })\n      .catch(err => {\n        console.log('check user method err 1:', err);\n        if (err.status === 403) {\n          const token = getRefreshToken();\n          refreshToken(token)\n            .then(res => {\n              console.log('refresh token method res:', res);\n              const { accessToken, refreshToken } = res;\n              assignTokens(accessToken, refreshToken);\n              dispatch(checkAuth());\n            })\n            .catch(err => {\n              console.log('check user method err 2:', err);\n              dispatch(loginUserFailedAction());\n            })\n        } else {\n          console.log('check user method err 2:', err);\n          dispatch(loginUserFailedAction());\n        }\n      })\n  }\n}\n\nexport const updateUserInfo: AppThunk = (data: TAuthFormData) => {\n  return function (dispatch: AppDispatch | AppThunk) {\n    dispatch(updateUserRequestAction());\n    patchUserData(data)\n      .then(res => {\n        console.log('update user res: ', res);\n        dispatch(updateUserSuccessAction(res.user));\n      })\n      .catch(err => {\n        console.log('update user err 1: ', err);\n        if (err.status === 403) {\n          const token = getRefreshToken();\n          refreshToken(token)\n            .then(res => {\n              console.log('refresh token method res:', res);\n              const { accessToken, refreshToken } = res;\n              assignTokens(accessToken, refreshToken);\n              dispatch(updateUserInfo(data));\n            })\n            .catch(err => {\n              console.log('update user err 2: ', err);\n              dispatch(updateUserFailedAction());\n            });\n        } else {\n          console.log('update user err 2: ', err);\n          dispatch(updateUserFailedAction());\n        }\n      });\n  }\n}\n\nexport const logoutUser: AppThunk = () => {\n  return function (dispatch: AppDispatch) {\n    dispatch(logoutUserRequestAction());\n    clearUserData()\n      .then(res => {\n        console.log('logout user method ok: ', res);\n        clearTokens();\n        dispatch(logoutUserSuccessAction());\n      })\n      .catch(err => {\n        console.log('logout user method fail: ', err);\n        dispatch(logoutUserFailedAction());\n      })\n  }\n}","import {\n  TypedUseSelectorHook,\n  useDispatch as dispatchHook,\n  useSelector as selectorHook\n} from 'react-redux';\nimport { AppDispatch, AppThunk, RootState } from './types';\n\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\n","import { FC } from 'react';\n\nimport loaderStyles from './loader.module.css'\nimport { BurgerIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nconst Loader: FC = () => {\n  return (\n    <div className={loaderStyles.container}>\n      <div className={loaderStyles.loader}>\n        <BurgerIcon type='secondary' />\n      </div>\n    </div>\n  )\n}\n\nexport default Loader;","import { memo, FC, useEffect } from 'react';\nimport AuthForm from '../components/auth-form/auth-form';\n\nimport { authUser, checkAuth } from '../services/actions/user';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { LocationStateTypes } from '../services/types/location-state-types';\nimport Loader from '../components/loader/loader';\nimport { TAuthFormData } from '../services/types/auth-form-types';\n\nconst Login: FC = () => {\n  const dispatch = useDispatch();\n  const { currentUser, userLoginRequest } = useSelector(state => state.user);\n  const { state } = useLocation<LocationStateTypes>();\n\n  const onLogin = (data: TAuthFormData) => {\n    dispatch(authUser(data));\n  }\n\n  useEffect(() => {\n    dispatch(checkAuth());\n  }, [dispatch]);\n\n  if (currentUser) {\n    return (\n      <Redirect to={ state?.from || '/'} />\n    )\n  }\n\n  if (userLoginRequest) {\n    return <Loader />;\n  }\n\n  return <AuthForm type='login' submitCallback={onLogin} />\n}\n\nexport default memo(Login);","const profileMenuTitles = [\n    { path: '', title: 'Профиль', type: 'navlink' },\n    { path: '/orders', title: 'История заказов', type: 'navlink' },\n    { title: 'Выход', type: 'button' },\n]\n\nexport default profileMenuTitles;","import { FC, memo } from 'react';\n\nimport styles from './orders-list-item.module.css';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { TOrderRenderData } from '../../services/types/t-order-data';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\n\ntype Props = {\n  data: TOrderRenderData\n  authorized?: boolean\n}\n\nconst OrdersListItem: FC<Props> = ({ authorized, data }) => {\n  const { path } = useRouteMatch();\n  const { images, name, parsedTime, number, price, _id, status } = data;\n  const history = useHistory();\n  const location = useLocation();\n  const renderIngredientsImages = () => {\n    let position = -50;\n    let zIndex = 10;\n    const excessCount = images.length - 5;\n    return images.map((item, index) => {\n      position += 50;\n      zIndex -= 1;\n      const key = String(index + position + zIndex)\n      if (index === 0) {\n        return (\n          <div\n            className={styles.image}\n            style={{ backgroundImage: `url(${item})`, zIndex: zIndex }}\n            key={key}\n          />\n        )\n      } else if (index < 5) {\n        return (\n          <div\n            className={styles.image}\n            style={{ backgroundImage: `url(${item})`, position: 'absolute', left: `${position}px`, zIndex: zIndex }}\n            key={key}\n          />\n        )\n      } else if (index === 5) {\n        return (\n          <div\n            className={`${styles.image} ${styles.image_excess}`}\n            style={{\n              backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.527),rgba(0, 0, 0, 0.5)), url(${item})`,\n              position: 'absolute',\n              left: `${position}px`,\n              zIndex: zIndex\n            }}\n            key={key}\n          >\n            <p className='text text_type_digits-default'>+{excessCount}</p>\n          </div>\n        )\n      }\n      return null\n    })\n  }\n\n  const onClick = (): void => {\n    history.push(`${path}/${_id}`, { background: location, order: data });\n  }\n\n  let statusStyles;\n  switch (status) {\n    case 'created':\n      statusStyles = { color: 'white', message: 'Создан' }\n      break\n    case 'pending':\n      statusStyles = { color: 'white', message: 'Готовится' }\n      break\n    case 'done':\n      statusStyles = { color: '#00CCCC', message: 'Выполнен' }\n      break\n    default:\n      statusStyles = { message: 'Создан' }\n      break\n  }\n\n  return (\n    <div className={`${styles.container} p-6`} onClick={onClick}>\n      <div className={`${styles.credentials} mb-6`}>\n        <span className='text text_type_digits-default'>#{number}</span>\n        <span className='text text_type_main-default text_color_inactive'>{parsedTime}</span>\n      </div>\n      <p className='text text_type_main-medium mb-6'>{name}</p>\n      {authorized &&\n        <p\n          style={{ color: statusStyles.color }}\n          className='text text_type_main-default mb-6'\n        >\n          {statusStyles.message}\n        </p>\n      }\n      <div className={styles.ingredients}>\n        <div className={styles.images}>\n          {renderIngredientsImages()}\n        </div>\n        <div className={styles.price}>\n          <span className='text text_type_digits-default'>{price}</span>\n          <CurrencyIcon type='primary' />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(OrdersListItem);","function calculateDaysDiff (date: Date): number {\n  const oneDay = 1000 * 3600 * 24;\n  const today = new Date();\n  return Math.round(Math.abs((today.getTime() - date.getTime()) / oneDay));\n}\n\nfunction getDateString(diff: number): string {\n  let res = '';\n  switch (diff) {\n    case 0:\n      res = 'Сегодня'\n      break\n    case 1:\n      res = 'Вчера'\n      break\n    case 2:\n      res = 'Позавчера'\n      break\n    case 3:\n    case 4:\n      res = `${diff} дня назад`\n      break\n    default:\n      res = `${diff} дней назад`\n      break\n  }\n  return res;\n}\n\nexport function parseTime(timestamp: string): string {\n  const dateObj = new Date(Date.parse(timestamp));\n  const hours = dateObj.getHours() < 10 ? '0' + dateObj.getHours() : dateObj.getHours();\n  const minutes = dateObj.getMinutes() < 10 ? '0' + dateObj.getMinutes() : dateObj.getMinutes();\n  const timezoneDiff = dateObj.getTimezoneOffset();\n  const timezone =\n    timezoneDiff.toString()[0] === '+' ?\n      'i-GMT–' + Math.abs(timezoneDiff / 60)\n      : 'i-GMT+' + Math.abs(timezoneDiff / 60);\n  const day = getDateString(calculateDaysDiff(dateObj));\n  return String(day + ', ' + hours + ':' + minutes + ' ' + timezone);\n}","import { TOrderData, TOrderRenderData } from '../services/types/t-order-data';\nimport TBurgersDataTypes from '../services/types/t-burgers-data-types';\nimport { parseTime } from './time-helper';\n\nconst getOrderData = (order: TOrderData, ingredientsList: TBurgersDataTypes[]): TOrderRenderData => {\n  const data = {\n    images: [],\n    price: 0,\n    fullIngredients: [],\n    parsedTime: ''\n  };\n  const orderData: TOrderRenderData = { ...order, ...data };\n  order.ingredients.forEach((ingredientId: string) => {\n    const ingredient = ingredientsList.find(i => i._id === ingredientId);\n    if (ingredient) {\n      orderData.fullIngredients.push(ingredient);\n      orderData.images.push(ingredient.image_large);\n      orderData.price += ingredient.price;\n      orderData.parsedTime = parseTime(orderData.createdAt);\n    }\n  });\n  return orderData;\n}\n\nconst completeOrdersData = (ordersData: TOrderData[], ingredientsList: TBurgersDataTypes[]): TOrderRenderData[] => {\n  return ordersData.map(item => {\n    const data = {\n      images: [],\n      price: 0,\n      fullIngredients: [],\n      parsedTime: ''\n    };\n    const newItem: TOrderRenderData = { ...item, ...data };\n    item.ingredients.forEach((ingredientId: string) => {\n      const ingredient = ingredientsList.find(i => i._id === ingredientId);\n      if (ingredient) {\n        newItem.fullIngredients.push(ingredient);\n        newItem.images.push(ingredient.image_large);\n        newItem.price += ingredient.price;\n        newItem.parsedTime = parseTime(newItem.createdAt);\n      }\n    });\n    return newItem;\n  })\n}\n\nexport { getOrderData, completeOrdersData }","import { FC, memo } from 'react';\nimport { useSelector } from '../../services/hooks';\nimport OrdersListItem from '../orders-list-item/orders-list-item';\nimport { TOrderRenderData, TOrdersInfo } from '../../services/types/t-order-data';\nimport { completeOrdersData } from '../../helpers/orders-helper';\nimport styles from './orders-list.module.css';\n\ntype Props = {\n  authorized?: boolean\n  data: TOrdersInfo\n}\n\n\nconst OrdersList: FC<Props> = ({ authorized, data}) => {\n  const { ingredientsList } = useSelector(state => state.ingredients);\n  const orders = authorized ? [...data.orders].reverse() : data.orders;\n\n  return (\n    <div className={styles.sections}>\n      {ingredientsList.length > 0 &&\n        completeOrdersData(orders, ingredientsList).map((order: TOrderRenderData) => (\n            <OrdersListItem data={order} key={order._id} authorized={authorized} />\n          ))\n      }\n    </div>\n  )\n}\n\nexport default memo(OrdersList);","export const WS_CONNECTION_START_AUTH = 'WS_CONNECTION_START_AUTH' as const;\nexport const WS_CONNECTION_STOP_AUTH = 'WS_CONNECTION_STOP_AUTH' as const;\nexport const WS_CONNECTION_SUCCESS_AUTH = 'WS_CONNECTION_SUCCESS_AUTH' as const;\nexport const WS_CONNECTION_ERROR_AUTH = 'WS_CONNECTION_ERROR_AUTH' as const;\nexport const WS_CONNECTION_CLOSED_AUTH = 'WS_CONNECTION_CLOSED_AUTH' as const;\nexport const WS_GET_MESSAGE_AUTH = 'WS_GET_MESSAGE_AUTH' as const;\nexport const WS_SEND_MESSAGE_AUTH = 'WS_SEND_MESSAGE_AUTH' as const;\n\n","import React, { useEffect } from 'react';\nimport OrdersList from '../components/orders-list/orders-list';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { WS_CONNECTION_CLOSED_AUTH, WS_CONNECTION_START_AUTH } from '../services/constants/ws-auth-actions';\n\nfunction OrderHistory() {\n  const dispatch = useDispatch();\n  const { ordersInfo } = useSelector(state => state.wsAuthFeed);\n\n  useEffect(\n    () => {\n      dispatch({ type: WS_CONNECTION_START_AUTH });\n      return () => {\n        dispatch({ type: WS_CONNECTION_CLOSED_AUTH })\n      }\n    },\n    [dispatch]\n  );\n\n  return (\n    <>\n      {ordersInfo && <OrdersList authorized data={ordersInfo}/>}\n    </>\n    )\n}\n\nexport default OrderHistory;","import React, { memo, FC, ChangeEvent, useCallback, useState, SyntheticEvent } from 'react';\nimport { NavLink, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { PasswordInput, Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport profileStyles from './profile.module.css';\nimport profileMenuTitles from '../../services/constants/profile-menu-titles';\nimport { useDispatch, useSelector } from '../../services/hooks';\nimport { logoutUser, updateUserInfo } from '../../services/actions/user';\nimport OrderHistory from '../order-history';\n\nconst Profile: FC = () => {\n  let { path, url } = useRouteMatch();\n  const { currentUser } = useSelector(state => state.user);\n\n  const [formData, setFormData] = useState({\n    name: currentUser?.name || '',\n    email: currentUser?.email || '',\n    password: ''\n  });\n\n  const dispatch = useDispatch();\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setFormData({...formData, [e.target.name]: e.target.value});\n  }\n\n  const submit = (e: SyntheticEvent) => {\n    e.preventDefault();\n    dispatch(updateUserInfo(formData));\n  }\n\n  const onCancel = useCallback((e: SyntheticEvent) => {\n    e.preventDefault();\n    if (currentUser) {\n      setFormData({ name: currentUser.name, email: currentUser.email, password: '' });\n    }\n  }, [currentUser]);\n\n  const logout = () => {\n    dispatch(logoutUser());\n  }\n\n  const profileForm = (\n    <div className={profileStyles.form_container}>\n      <form className={profileStyles.form} onSubmit={submit}>\n        <Input value={formData.name} onChange={onChange} placeholder={'Имя'} name={'name'}/>\n        <Input value={formData.email} onChange={onChange} placeholder={'Логин'} name={'email'}/>\n        <PasswordInput value={formData.password} onChange={onChange} name={'password'}/>\n        <Button type='primary' size=\"medium\">Сохранить</Button>\n        <div onClick={onCancel}>\n          <Button type='secondary' size=\"medium\">Отмена</Button>\n        </div>\n      </form>\n    </div>\n  )\n\n  return (\n    <section className={profileStyles.container}>\n      <div className={profileStyles.menu}>\n        <nav className={profileStyles.navigation}>\n          <ul className={profileStyles.list}>\n            {profileMenuTitles.map((item, index) => {\n              return (\n                <li className={profileStyles.list_item} key={index}>\n                  {item.type === 'navlink' ? (\n                    <NavLink\n                      exact\n                      to={`${url}${item.path}`}\n                      className={`${profileStyles.link} text text_type_main-medium text_color_inactive`}\n                      activeClassName={profileStyles.link_active}\n                    >\n                      {item.title}\n                    </NavLink>\n                  ) : (\n                    <button\n                      onClick={logout}\n                      className={`${profileStyles.link} text text_type_main-medium text_color_inactive`}\n                    >\n                      {item.title}\n                    </button>\n                  )}\n                </li>\n              )\n            })}\n          </ul>\n        </nav>\n        <p className='text text_type_main-default text_color_inactive'>\n          В этом разделе вы можете изменить свои персональные данные\n        </p>\n      </div>\n      <Switch>\n        <Route exact path={path}>\n          {currentUser && profileForm}\n        </Route>\n        <Route exact path={`${path}/123`}>\n          <div>123</div>\n        </Route>\n        <Route exact path={`${path}/orders`}>\n          <OrderHistory />\n        </Route>\n      </Switch>\n    </section>\n  )\n}\n\nexport default memo(Profile);","import { memo, FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { Redirect, useLocation } from 'react-router-dom';\n\nimport AuthForm from '../components/auth-form/auth-form';\nimport { checkAuth, registerUser } from '../services/actions/user';\nimport { TAuthFormData } from '../services/types/auth-form-types';\nimport { LocationStateTypes } from '../services/types/location-state-types';\n\nconst Register: FC = () => {\n  const dispatch = useDispatch();\n  const { currentUser, userLoginRequest } = useSelector(state => state.user);\n  const { state } = useLocation<LocationStateTypes>();\n\n  const onRegister = (data: TAuthFormData) => {\n    dispatch(registerUser(data));\n  }\n\n  useEffect(() => {\n    dispatch(checkAuth());\n  }, [dispatch]);\n\n  if (currentUser) {\n    return (\n      <Redirect to={ state?.from || '/'} />\n    )\n  }\n\n  if (userLoginRequest) {\n    return null;\n  }\n\n  return <AuthForm type='register' submitCallback={onRegister} />\n}\n\nexport default memo(Register);","import { memo, FC, useCallback, useEffect } from 'react';\nimport AuthForm from '../components/auth-form/auth-form';\nimport { Redirect, useLocation } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { checkAuth, handleResetPasswordRequest } from '../services/actions/user';\nimport { TAuthFormData } from '../services/types/auth-form-types';\nimport { LocationStateTypes } from '../services/types/location-state-types';\nimport Loader from '../components/loader/loader';\n\nconst ForgotPassword: FC = () => {\n  const dispatch = useDispatch();\n  const {\n    currentUser,\n    resetPasswordSuccess,\n    userLoginRequest\n  } = useSelector(state => state.user);\n  const { state } = useLocation<LocationStateTypes>();\n\n  useEffect(() => {\n    dispatch(checkAuth());\n  }, [dispatch]);\n\n  const onSubmit = useCallback((data: TAuthFormData) => {\n    dispatch(handleResetPasswordRequest(data));\n  }, [dispatch]);\n\n  if (currentUser) {\n    return (\n      <Redirect to={ state?.from || '/' } />\n    )\n  }\n\n  if (userLoginRequest) {\n    return <Loader />\n  }\n\n  return (\n    resetPasswordSuccess ?\n      <Redirect to={{ pathname: '/reset-password', state: { referrer: 'forgot-password'} }} /> :\n      <AuthForm type='forgot' submitCallback={onSubmit}/>\n    )\n}\n\nexport default memo(ForgotPassword);","import { memo, FC, useCallback, useEffect } from 'react';\nimport AuthForm from '../components/auth-form/auth-form';\nimport Loader from '../components/loader/loader';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { TAuthFormData } from '../services/types/auth-form-types';\nimport { checkAuth, handlePasswordUpdate } from '../services/actions/user';\nimport { Redirect, useLocation, useHistory } from 'react-router-dom';\nimport { LocationStateTypes } from '../services/types/location-state-types';\n\nconst ResetPassword: FC = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    updatePasswordSuccess,\n    currentUser,\n    userLoginRequest\n  } = useSelector(state => state.user);\n  const { state } = useLocation<LocationStateTypes>();\n\n  const onSubmit = useCallback((data: TAuthFormData) => {\n    dispatch(handlePasswordUpdate(data));\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(checkAuth());\n  }, [dispatch]);\n\n  if (currentUser) {\n    return (\n      <Redirect to={ state?.from || '/' } />\n    )\n  }\n\n  if (state?.referrer !== 'forgot-password' || history.action === 'POP') {\n    return (\n      <Redirect to={ state?.from || '/login' } />\n    )\n  }\n\n  if (userLoginRequest) {\n    return <Loader />;\n  }\n\n  return updatePasswordSuccess ? <Redirect to='/login' /> : <AuthForm type='reset' submitCallback={onSubmit}/>\n}\n\nexport default memo(ResetPassword);","import React from 'react';\n\nfunction NotFoundError() {\n  return <div>not found page</div>\n}\n\nexport default NotFoundError;","import { memo, FC, ReactNode, useEffect } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from '../../services/hooks';\nimport { checkAuth } from '../../services/actions/user';\n\ntype Props = {\n  children: ReactNode\n  path: string\n  exact?: boolean\n}\n\nconst ProtectedRoute: FC<Props> = ({ children, ...rest }) => {\n  const { currentUser } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(checkAuth());\n  }, [dispatch]);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => currentUser ?\n        children :\n        <Redirect\n          to={{ pathname: '/login', state: { from: location } }}\n        />}\n    />\n  )\n}\n\nexport default memo(ProtectedRoute);","import { memo, FC } from 'react';\n\nimport ingredientDetailsStyles from './ingredient-details.module.css';\nimport TBurgersDataTypes from '../../services/types/t-burgers-data-types';\nimport modalStyles from '../modal/modal.module.css';\n\ntype Props = {\n  ingredient: TBurgersDataTypes | undefined;\n}\n\nconst IngredientDetails: FC<Props> = (props) => {\n  if (!props.ingredient) {\n    return null\n  }\n  const { image, name, calories, carbohydrates, fat, proteins } = props.ingredient;\n\n  return (\n    <div className={ingredientDetailsStyles.details}>\n      <img src={image} alt={name} className={ingredientDetailsStyles.image}/>\n      <p\n        className={`text text_type_main-medium mb-8 ${ingredientDetailsStyles.subtitle}`}\n      >\n        {name}\n      </p>\n      <div className={modalStyles.nutrients}>\n        <p className={`text text_type_main-medium ${ingredientDetailsStyles.text} text_color_inactive`}>\n          Калории, ккал\n          <br />\n          {calories}\n        </p>\n        <p className={`text text_type_main-medium ${ingredientDetailsStyles.text} text_color_inactive`}>\n          Белки, г\n          <br />\n          {proteins}\n        </p>\n        <p className={`text text_type_main-medium ${ingredientDetailsStyles.text} text_color_inactive`}>\n          Жиры, г\n          <br />\n          {fat}\n        </p>\n        <p className={`text text_type_main-medium ${ingredientDetailsStyles.text} text_color_inactive`}>\n          Углеводы, г\n          <br />\n          {carbohydrates}\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(IngredientDetails);","import { memo, FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport IngredientDetails from '../components/ingredient-details/ingredient-details';\nimport { useSelector } from '../services/hooks';\nimport Loader from '../components/loader/loader';\nimport NotFoundError from './not-found-error';\n\nconst IngredientPage: FC = () => {\n  const { ingredientsList, ingredientsRequest, ingredientsFailed } = useSelector(state => state.ingredients);\n  const { ingredientId } = useParams<{ ingredientId: string }>();\n\n  let ingredient = null;\n  if (ingredientsList.length > 0) {\n    ingredient = ingredientsList.find(item => item._id === ingredientId);\n  } else {\n    return <Loader />\n  }\n\n  const canRenderIngredient = ingredientsList.length > 0 && !ingredientsRequest && !ingredientsFailed;\n\n  return (\n    <>\n      {canRenderIngredient &&\n        ingredient ?\n        <div className='mt-20'>\n          <IngredientDetails ingredient={ingredient} />\n        </div>\n        :\n        <NotFoundError />\n      }\n    </>\n  )\n\n}\n\nexport default memo(IngredientPage);","import { FC } from 'react';\n\nimport modalOverlayStyles from './modal-overlay.module.css';\n\ntype Props = {\n  onClose: () => void\n}\n\nconst ModalOverlay: FC<Props> = ({ onClose }) => {\n  return <div className={modalOverlayStyles.container} onClick={onClose} />;\n}\n\nexport default ModalOverlay;","import { memo, FC, useEffect, ReactNode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useHistory } from 'react-router-dom';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport ModalOverlay from '../modal-overlay/modal-overlay';\nimport modalStyles from './modal.module.css';\n\ntype Props = {\n  children: ReactNode\n  heading: string\n  headingType?: 'digits' | string\n  handleClose?: () => void\n  slim?: boolean\n}\n\nconst Modal: FC<Props> = ({ slim, headingType, heading, handleClose, children }) => {\n  const modalsRoot = document.getElementById('app');\n  const history = useHistory();\n  const onClose = handleClose ? handleClose : history.goBack;\n\n  const escapeClose = (event: KeyboardEvent) => {\n    if (event.key === \"Escape\") {\n      onClose();\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', escapeClose);\n    return () => {\n      document.removeEventListener('keydown', escapeClose);\n    }\n  },[]);\n\n  const renderHeading = () => {\n    const uiKitClass = headingType === 'digits' ? 'text_type_digits-default' : 'text_type_main-medium'\n    return (\n      <div className={modalStyles.header}>\n        <p className={`${modalStyles.heading} text ${uiKitClass}`}>{heading}</p>\n        <CloseIcon type=\"primary\" onClick={onClose} />\n      </div>\n    )\n  }\n\n  return modalsRoot ? ReactDOM.createPortal((\n    <>\n      <div\n        className={`${modalStyles.container} p-10`}\n        style={{ width: `${ slim ? '640px' : '720px' }`}}\n      >\n        {renderHeading()}\n        {children}\n      </div>\n      <ModalOverlay onClose={onClose} />\n    </>\n  ), modalsRoot) : null;\n\n}\n\nexport default memo(Modal);","export const GET_INGREDIENTS_REQUEST = 'GET_INGREDIENTS_REQUEST' as const;\nexport const GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS'as const;\nexport const GET_INGREDIENTS_FAILED = 'GET_INGREDIENTS_FAILED'as const;\n\nexport const ADD_CURRENT_INGREDIENT = 'ADD_CURRENT_INGREDIENT'as const;\nexport const DELETE_CURRENT_INGREDIENT = 'DELETE_CURRENT_INGREDIENT'as const;","import { getProductsData } from '../../helpers/api';\nimport { AppDispatch, AppThunk } from '../types';\nimport {\n  GET_INGREDIENTS_REQUEST,\n  GET_INGREDIENTS_SUCCESS,\n  GET_INGREDIENTS_FAILED,\n  ADD_CURRENT_INGREDIENT,\n  DELETE_CURRENT_INGREDIENT,\n} from '../constants/ingredients';\nimport TBurgersDataTypes from '../types/t-burgers-data-types';\n\nexport interface IGetIngredientsRequestAction {\n  readonly type: typeof GET_INGREDIENTS_REQUEST;\n}\n\nexport interface IGetIngredientsSuccessAction {\n  readonly type: typeof GET_INGREDIENTS_SUCCESS;\n  readonly data: TBurgersDataTypes[];\n}\n\nexport interface IGetIngredientsFailedAction {\n  readonly type: typeof GET_INGREDIENTS_FAILED;\n}\n\nexport interface IAddCurrentIngredientAction {\n  readonly type: typeof ADD_CURRENT_INGREDIENT;\n  readonly ingredient: TBurgersDataTypes;\n}\n\nexport interface IDeleteCurrentIngredientAction {\n  readonly type: typeof DELETE_CURRENT_INGREDIENT;\n}\n\nexport type TIngredientsActions =\n  IGetIngredientsRequestAction\n  | IGetIngredientsSuccessAction\n  | IGetIngredientsFailedAction\n  | IAddCurrentIngredientAction\n  | IDeleteCurrentIngredientAction\n\nexport const getIngredientsRequestAction = (): IGetIngredientsRequestAction => ({\n  type: GET_INGREDIENTS_REQUEST\n});\n\nexport const getIngredientsSuccessAction = (data: TBurgersDataTypes[]): IGetIngredientsSuccessAction => ({\n  type: GET_INGREDIENTS_SUCCESS,\n  data,\n});\n\nexport const getIngredientsFailedAction = (): IGetIngredientsFailedAction => ({\n  type: GET_INGREDIENTS_FAILED\n});\n\nexport const addCurrentIngredientAction = (ingredient: TBurgersDataTypes): IAddCurrentIngredientAction => ({\n  type: ADD_CURRENT_INGREDIENT,\n  ingredient,\n});\n\nexport const deleteCurrentIngredientAction = (): IDeleteCurrentIngredientAction => ({\n  type: DELETE_CURRENT_INGREDIENT\n});\n\n\nexport const getIngredients: AppThunk = () => {\n  return function(dispatch: AppDispatch) {\n    dispatch(getIngredientsRequestAction());\n    getProductsData()\n      .then(res => {\n        dispatch(getIngredientsSuccessAction(res.data))\n      })\n      .catch(() => {\n        dispatch(getIngredientsFailedAction());\n      })\n  }\n}\n\n","export const WS_CONNECTION_START = 'WS_CONNECTION_START' as const;\nexport const WS_CONNECTION_STOP = 'WS_CONNECTION_STOP' as const;\nexport const WS_CONNECTION_SUCCESS = 'WS_CONNECTION_SUCCESS' as const;\nexport const WS_CONNECTION_ERROR = 'WS_CONNECTION_ERROR' as const;\nexport const WS_CONNECTION_CLOSED = 'WS_CONNECTION_CLOSED' as const;\nexport const WS_GET_MESSAGE = 'WS_GET_MESSAGE' as const;\nexport const WS_SEND_MESSAGE = 'WS_SEND_MESSAGE' as const;\n\n","import { ReactNode, memo, FC } from 'react';\n\nimport mainContainerStyles from './main-container.module.css';\n\ntype Props = {\n  title?: string\n  className?: string\n  children: ReactNode\n}\n\nconst MainContainer: FC<Props> = ({ className, title, children }) => {\n  return (\n    <div className={className}>\n      {title &&\n        <h2 className=\"pt-10 mb-5 text text_type_main-large\">\n          {title}\n        </h2>\n      }\n      <section className={mainContainerStyles.container}>\n        {children}\n      </section>\n    </div>\n  )\n}\n\nexport default memo(MainContainer);","import { FC, memo } from 'react';\n\nimport styles from './orders-info.module.css';\nimport MainContainer from '../main-container/main-container';\nimport { TOrdersInfo } from '../../services/types/t-order-data';\n\ntype Props = {\n  data: TOrdersInfo\n}\n\nconst OrdersInfo: FC<Props> = ({ data }) => {\n  const { total, totalToday, orders } = data;\n  const ordersReady = orders.filter(item => item.status === 'done');\n  const ordersInProgress = orders.filter(item => item.status === 'pending');\n  return (\n    <div>\n      <MainContainer className='mb-15'>\n        <div>\n          <h3 className='mb-6 text text_type_main-medium'>Готовы:</h3>\n          <ul className={styles.list}>\n            {ordersReady.map(order =>\n              <li key={String(order.number)}>\n                <span className={`${styles.ready} text text_type_digits-default`}>\n                  {order.number}\n                </span>\n              </li>\n            )}\n          </ul>\n        </div>\n        <div>\n          <h3 className='mb-6 text text_type_main-medium'>В работе:</h3>\n          <ul className={styles.list}>\n            {ordersInProgress.map(order =>\n              <li key={String(order.number)}>\n                <span className='text text_type_digits-default'>\n                  {order.number}\n                </span>\n              </li>\n            )}\n          </ul>\n        </div>\n      </MainContainer>\n      <div className='mb-15'>\n        <p className='text text_type_main-medium'>Выполнено за все время:</p>\n        <p className={`${styles.glow} text text_type_digits-large`}>{total}</p>\n      </div>\n      <div>\n        <p className='text text_type_main-medium'>Выполнено за сегодня:</p>\n        <p className={`${styles.glow} text text_type_digits-large`}>{totalToday}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(OrdersInfo);","import { FC, memo, useEffect } from 'react';\n\nimport { useDispatch, useSelector } from '../services/hooks';\nimport { WS_CONNECTION_START, WS_CONNECTION_STOP } from '../services/constants/ws-actions';\n\nimport MainContainer from '../components/main-container/main-container';\nimport OrdersList from '../components/orders-list/orders-list';\nimport OrdersInfo from '../components/orders-info/orders-info';\n\nconst Feed: FC = () => {\n  const dispatch = useDispatch();\n  const { ordersInfo } = useSelector(state => state.wsFeed);\n\n  useEffect(\n    () => {\n      dispatch({ type: WS_CONNECTION_START });\n      return () => {\n        dispatch({ type: WS_CONNECTION_STOP })\n      }\n    },\n    [dispatch]\n  );\n\n  return (\n    <>\n      {ordersInfo &&\n        <MainContainer title='Лента заказов'>\n            <OrdersList data={ordersInfo} />\n            <OrdersInfo data={ordersInfo} />\n        </MainContainer>\n      }\n    </>\n  )\n}\n\nexport default memo(Feed);","import { FC, memo } from 'react';\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useDrag } from \"react-dnd\";\n\nimport TBurgersDataTypes from '../../services/types/t-burgers-data-types';\nimport burgerIngredientStyles from './burger-ingredients-item.module.css';\n\ntype Props = {\n  data: TBurgersDataTypes\n  onShowDetails: (ingredient: TBurgersDataTypes) => void\n  count: number\n}\n\nconst BurgerIngredientsItem: FC<Props> = ({\n    count,\n    data,\n    data: { image, name, price },\n    onShowDetails\n  }) => {\n  const [, dragRef] = useDrag({\n    type: \"ingredient\",\n    item: {...data},\n    collect: monitor => ({\n      isDrag: monitor.isDragging()\n    })\n  });\n\n  return (\n    <div\n      className={`${burgerIngredientStyles.container} pl-4 pr-4`}\n      onClick={() => onShowDetails(data)}\n      ref={dragRef}\n    >\n      {count > 0 &&\n        <div className={burgerIngredientStyles.counter}>\n            <Counter count={count} size='default'/>\n        </div>\n      }\n      <img src={image} alt={name} className='mb-1'/>\n      <div className={`${burgerIngredientStyles.price} mb-1`}>\n        <p className='mr-2 text text_type_digits-default'>{price}</p>\n        <CurrencyIcon type=\"primary\"/>\n      </div>\n      <p className={`${burgerIngredientStyles.title} text text_type_main-medium`}>{name}</p>\n    </div>\n  );\n}\n\nexport default memo(BurgerIngredientsItem);","import { memo, useState, useRef, FC } from 'react';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport burgerIngredientsStyles from './burger-ingredients.module.css';\nimport BurgerIngredientsItem from '../burger-ingredients-item/burger-ingredients-item';\n\nimport TBurgersDataTypes from '../../services/types/t-burgers-data-types';\n\nimport { useSelector, useDispatch } from '../../services/hooks';\n\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { addCurrentIngredientAction } from '../../services/actions/ingredients';\n\nconst SUBTITLES: { [key: string]: string } = {\n  bun: \"Булки\",\n  main: \"Начинки\",\n  sauce: \"Соусы\"\n}\n\ntype RefsObjectType = {\n  [key: string]: HTMLDivElement\n}\n\nconst BurgerIngredients: FC = () => {\n  const [currentTab, setCurrentTab] = useState('Булки');\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const elemRefs = useRef<RefsObjectType>({});\n\n  const {\n    ingredientsRequest,\n    ingredientsFailed,\n    ingredientsList,\n  } = useSelector(state => state.ingredients);\n  const { constructorItems } = useSelector(state => state.burger);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n\n  const renderTabs = () => {\n    return (\n      <ul className={`${burgerIngredientsStyles.tabs} mb-10`}>\n        <li>\n          <Tab value=\"Булки\" active={currentTab === 'Булки'} onClick={() => switchTab('Булки')}>\n            Булки\n          </Tab>\n        </li>\n        <li>\n          <Tab value=\"Соусы\" active={currentTab === 'Соусы'} onClick={() => switchTab('Соусы')}>\n            Соусы\n          </Tab>\n        </li>\n        <li>\n          <Tab value=\"Начинки\" active={currentTab === 'Начинки'} onClick={() => switchTab('Начинки')}>\n            Начинки\n          </Tab>\n        </li>\n      </ul>\n    )\n  }\n\n  const switchTab = (tab: string) => {\n    setCurrentTab(tab);\n    const el = document.getElementById(tab);\n    if (el) el.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  const openDetails = (data: TBurgersDataTypes) => {\n    dispatch(addCurrentIngredientAction(data));\n    history.push(`/ingredients/${data._id}`, { background: location, ingredient: data });\n  }\n\n  const renderIngredientsSection = (ingredient: string) => {\n    const sectionData = ingredientsList.filter(item => {\n      return item.type === ingredient\n    })\n    const elements = sectionData.map(ingredient => {\n      const orderCount = constructorItems.filter(item => item._id === ingredient._id).length;\n      return (\n        <BurgerIngredientsItem\n          key={ingredient._id}\n          data={ingredient}\n          onShowDetails={() => openDetails(ingredient)}\n          count={orderCount}\n        />\n      )\n    })\n    const sectionTitle = SUBTITLES[ingredient];\n\n    return (\n      <div\n        id={sectionTitle}\n        ref={el => {\n          if (el) elemRefs.current[sectionTitle] = el;\n        }}\n      >\n        <h3 className=\"text text_type_main-medium mb-6\">{sectionTitle}</h3>\n        <div className={`${burgerIngredientsStyles.items} mb-10 pl-4 pr-4`}>{elements}</div>\n      </div>\n    )\n  }\n\n  const handleScroll = () => {\n    if (scrollContainerRef && scrollContainerRef.current) {\n      const containerPosition = scrollContainerRef.current.getBoundingClientRect().top;\n      let minDiff = Number.POSITIVE_INFINITY;\n      let highlightedTab = '';\n      Object.keys(elemRefs.current).forEach(key => {\n        const ref = elemRefs.current[key];\n        const tabPosition = ref.getBoundingClientRect().top;\n        const diff = Math.abs(tabPosition - containerPosition);\n        if (diff < minDiff) {\n          minDiff = diff;\n          highlightedTab = key;\n        }\n      });\n      setCurrentTab(highlightedTab);\n    }\n  }\n\n  return (\n    <div>\n      {renderTabs()}\n      {!ingredientsRequest && ingredientsList.length > 0 &&\n        <div\n          className={burgerIngredientsStyles.sections}\n          ref={scrollContainerRef}\n          onScroll={handleScroll}\n        >\n          {renderIngredientsSection('bun')}\n          {renderIngredientsSection('sauce')}\n          {renderIngredientsSection('main')}\n        </div>\n      }\n      {ingredientsFailed &&\n        <p>Что-то пошло не так :(</p>\n      }\n    </div>\n  );\n}\n\nexport default memo(BurgerIngredients);","export const ADD_INGREDIENT = 'ADD_INGREDIENT'as const;\nexport const DELETE_INGREDIENT = 'DELETE_INGREDIENT'as const;\nexport const REWRITE_INGREDIENTS = 'REWRITE_INGREDIENTS'as const;","import { memo, FC, useRef } from 'react';\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { useDispatch } from '../../services/hooks';\nimport { XYCoord } from 'dnd-core'\n\nimport burgerConstructorItemStyles from './burger-constructor-item.module.css';\nimport TBurgersDataTypes from '../../services/types/t-burgers-data-types';\n\nimport { deleteIngredientAction } from '../../services/actions/burger';\n\ntype Props = {\n  index: number\n  data: TBurgersDataTypes\n  headItem?: boolean\n  tailItem?: boolean\n  moveItem: (dragIndex: number, hoverIndex: number) => void\n}\n\nconst BurgerConstructorItem: FC<Props> = (\n  { moveItem,\n    index,\n    data: { image, name, price, _id },\n    headItem,\n    tailItem\n  }) =>\n{\n  const ref = useRef<HTMLDivElement>(null);\n  const type = headItem ? \"top\" : tailItem ? \"bottom\" : undefined;\n  const title = headItem ? `${name} (верх)` : tailItem ? `${name} (низ)` : name;\n  const dragIcon = !(headItem || tailItem);\n  const uiKitSpacing = headItem || tailItem ? 'ml-8 pl-4 pr-4' : 'pl-4 pr-4';\n\n  const dispatch = useDispatch();\n\n  const deleteIngredient = () => {\n    dispatch(deleteIngredientAction(_id));\n  }\n\n  const [{ handlerId }, dropRef] = useDrop({\n    accept: 'constructor-item',\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      }\n    },\n    hover(item: { index: number }, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      moveItem(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    }\n  });\n\n  const [{ isDrag }, dragRef] = useDrag({\n    type: 'constructor-item',\n    item: () => {\n      return { index }\n    },\n    collect: monitor => ({\n      isDrag: monitor.isDragging(),\n    })\n  });\n\n  dragRef(dropRef(ref));\n  const containerAttributes = {\n    className: `${burgerConstructorItemStyles.item} ${uiKitSpacing}`,\n    ...(!tailItem && !headItem && {ref: ref}),\n    ...(isDrag && {style: { opacity: 0 }})\n  }\n\n  return (\n    <div\n      {...containerAttributes}\n      data-handler-id={handlerId}\n    >\n      {dragIcon && <DragIcon type='primary' />}\n      <ConstructorElement\n        type={type}\n        isLocked={headItem || tailItem}\n        text={title}\n        price={price}\n        thumbnail={image}\n        handleClose={deleteIngredient}\n      />\n    </div>\n  )\n}\n\nexport default memo(BurgerConstructorItem);","import {\n  ADD_INGREDIENT,\n  DELETE_INGREDIENT,\n  REWRITE_INGREDIENTS,\n} from '../constants/burger';\nimport TBurgersDataTypes from '../types/t-burgers-data-types';\n\nexport interface IAddIngredientAction {\n  readonly type: typeof ADD_INGREDIENT;\n  readonly payload: TBurgersDataTypes;\n}\n\nexport interface IDeleteIngredientAction {\n  readonly type: typeof DELETE_INGREDIENT;\n  readonly payload: string;\n}\n\nexport interface IRewriteIngredientsAction {\n  readonly type: typeof REWRITE_INGREDIENTS;\n  readonly payload: TBurgersDataTypes[];\n}\n\nexport type TBurgerActions =\n  IAddIngredientAction\n  | IDeleteIngredientAction\n  | IRewriteIngredientsAction\n\nexport const addIngredientAction = (payload: TBurgersDataTypes): IAddIngredientAction => ({\n  type: ADD_INGREDIENT,\n  payload,\n});\n\nexport const deleteIngredientAction = (payload: string): IDeleteIngredientAction => ({\n  type: DELETE_INGREDIENT,\n  payload,\n});\n\nexport const rewriteIngredientsAction = (payload: TBurgersDataTypes[]): IRewriteIngredientsAction => ({\n  type: REWRITE_INGREDIENTS,\n  payload,\n});","export default __webpack_public_path__ + \"static/media/check.7341dd32.svg\";","import { memo, FC } from 'react';\n\nimport orderDetailsStyles from './oder-details.module.css';\nimport checkIconPath from '../../images/check.svg';\n\ntype Props = {\n  orderId: string;\n}\n\nconst OrderDetails: FC<Props> = ({ orderId }) => {\n  return (\n    <>\n      <h1 className={`${orderDetailsStyles.order} text text_type_digits-large`}>{orderId}</h1>\n      <p className={`${orderDetailsStyles.subtitle} text text_type_main-medium mb-15`}>идентификатор заказа</p>\n      <img src={checkIconPath} alt=\"check-icon\" className={orderDetailsStyles.check} />\n      <p className={`text text_type_main-medium ${orderDetailsStyles.text} mb-2`}>ваш заказ начали готовить</p>\n      <p\n        className={`text text_type_main-medium ${orderDetailsStyles.text} text_color_inactive`}\n      >\n        Дождитесь готовности на орбитальной станции\n      </p>\n    </>\n  )\n}\n\nexport default memo(OrderDetails);","export const PLACE_ORDER_REQUEST = 'PLACE_ORDER_REQUEST'as const;\nexport const PLACE_ORDER_SUCCESS = 'PLACE_ORDER_SUCCESS'as const;\nexport const PLACE_ORDER_FAILED = 'PLACE_ORDER_FAILED'as const;\nexport const DELETE_ORDER_ID = 'DELETE_ORDER_ID'as const;","import {\n  PLACE_ORDER_REQUEST,\n  PLACE_ORDER_SUCCESS,\n  PLACE_ORDER_FAILED,\n  DELETE_ORDER_ID\n} from '../constants/order';\nimport { OrderDataTypes } from '../types/order-data-types';\nimport { sendOrderData } from '../../helpers/api';\nimport { AppDispatch, AppThunk } from '../types';\n\nexport interface IPlaceOrderRequestAction {\n  readonly type: typeof PLACE_ORDER_REQUEST;\n}\n\nexport interface IPlaceOrderSuccessAction {\n  readonly type: typeof PLACE_ORDER_SUCCESS;\n  readonly id: number;\n}\n\nexport interface IPlaceOrderFailedAction {\n  readonly type: typeof PLACE_ORDER_FAILED;\n}\n\nexport interface IDeleteOrderIdAction {\n  readonly type: typeof DELETE_ORDER_ID;\n}\n\nexport type TOrderActions = IPlaceOrderRequestAction\n  | IPlaceOrderSuccessAction\n  | IPlaceOrderFailedAction\n  | IDeleteOrderIdAction\n\nexport const placeOrderRequestAction = (): IPlaceOrderRequestAction => ({\n  type: PLACE_ORDER_REQUEST,\n});\n\nexport const placeOrderSuccessAction = (id: number): IPlaceOrderSuccessAction => ({\n  type: PLACE_ORDER_SUCCESS,\n  id,\n});\n\nexport const placeOrderFailedAction = (): IPlaceOrderFailedAction => ({\n  type: PLACE_ORDER_FAILED,\n});\n\nexport const deleteOrderIdAction = (): IDeleteOrderIdAction => ({\n  type: DELETE_ORDER_ID,\n});\n\nexport const placeOrder: AppThunk = (order: OrderDataTypes) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(placeOrderRequestAction());\n    sendOrderData(order)\n      .then(res => {\n        dispatch(placeOrderSuccessAction(res.order.number))\n      })\n      .catch(() => {\n        dispatch(placeOrderFailedAction());\n      })\n  }\n}","import { memo, FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDrop } from 'react-dnd';\nimport update from 'immutability-helper';\nimport { CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useDispatch, useSelector } from '../../services/hooks';\n\nimport BurgerConstructorItem from '../burger-constructor-item/burger-constructor-item';\nimport OrderDetails from '../order-details/order-details';\nimport Modal from '../modal/modal';\n\nimport { addIngredientAction, rewriteIngredientsAction } from '../../services/actions/burger';\nimport { deleteOrderIdAction, placeOrder } from '../../services/actions/order';\nimport { checkAuth } from '../../services/actions/user';\nimport { useHistory } from 'react-router-dom';\n\nimport burgerConstructorStyles from './burger-constructor.module.css';\nimport TBurgersDataTypes from '../../services/types/t-burgers-data-types';\n\nconst BurgerConstructor: FC = () => {\n  const [isDetailsOpen, setIsDetailsOpen] = useState(false);\n  const { constructorItems } = useSelector(state => state.burger);\n  const { currentOrderId } = useSelector(state => state.order);\n  const { currentUser } = useSelector(state => state.user);\n  const [{ isHover }, dropTarget] = useDrop({\n    accept: \"ingredient\",\n    drop(ingredientData: TBurgersDataTypes) {\n      dispatch(addIngredientAction(ingredientData));\n    },\n    collect: monitor => ({\n      isHover: monitor.isOver(),\n    })\n  });\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(checkAuth());\n  }, [dispatch]);\n\n  const bun = constructorItems.find(item => item.type === 'bun');\n  const otherItems = constructorItems.filter(item => item.type !== 'bun');\n\n  const moveCard = useCallback(\n    (dragIndex: number, hoverIndex: number) => {\n      const storageArrCopy = constructorItems;\n      const dragItem = otherItems[dragIndex];\n      const newArr = update(otherItems, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragItem],\n        ],\n      });\n      const resultArr = storageArrCopy.filter(i => i.type === 'bun').concat(...newArr);\n      dispatch(rewriteIngredientsAction(resultArr));\n    },\n    [constructorItems, dispatch, otherItems]);\n\n  const otherElements = otherItems.map((ingredient, index) => {\n    return <BurgerConstructorItem data={ingredient} key={ingredient.uuid} index={index} moveItem={moveCard} />\n  });\n\n  const orderTotalValue = useMemo(() => {\n    if (constructorItems.length) {\n      return constructorItems.reduce((sum, current) => sum += current.price, 0);\n    }\n  }, [constructorItems]);\n\n  const closeOrder = () => {\n    setIsDetailsOpen(false);\n    dispatch(deleteOrderIdAction());\n  }\n\n  const openOrder = () => {\n    if (currentUser) {\n      const order = {\n        ingredients: constructorItems.map(item => item._id)\n      };\n      dispatch(placeOrder(order));\n      setIsDetailsOpen(true);\n    } else {\n      history.push('/login');\n    }\n  }\n\n  return (\n    <div\n      className={`${burgerConstructorStyles.container} ${isHover ? burgerConstructorStyles.bordered : ''}`}\n      ref={dropTarget}\n    >\n      {isDetailsOpen && currentOrderId &&\n        <Modal handleClose={closeOrder} heading='Ваш заказ'>\n          <OrderDetails orderId={currentOrderId}/>\n        </Modal>\n      }\n      {bun &&\n        <BurgerConstructorItem data={bun} headItem index={999} moveItem={moveCard} />\n      }\n      {otherItems.length > 0 &&\n        <div className={burgerConstructorStyles.items}>{otherElements}</div>\n      }\n      {bun &&\n        <BurgerConstructorItem data={bun} tailItem index={999} moveItem={moveCard} />\n      }\n      {constructorItems.length > 0 &&\n        <div className={`${burgerConstructorStyles.price} pl-4 pr-4`}>\n            <p className=\"text text_type_digits-medium\">{orderTotalValue}</p>\n            <CurrencyIcon type=\"primary\"/>\n            <Button type=\"primary\" size=\"large\" onClick={openOrder}>\n                Оформить заказ\n            </Button>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default memo(BurgerConstructor);","import React, { FC, memo } from 'react';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\n\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredients';\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\nimport MainContainer from '../components/main-container/main-container';\n\nconst Constructor: FC = () => {\n  return (\n    <MainContainer title='Соберите Бургер'>\n      <DndProvider backend={HTML5Backend}>\n        <BurgerIngredients />\n        <BurgerConstructor />\n      </DndProvider>\n    </MainContainer>\n  )\n}\n\nexport default memo(Constructor);","import { FC, memo } from 'react';\nimport { TOrderRenderData } from '../../services/types/t-order-data';\n\nimport styles from './order-details-item.module.css';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\ntype Props = {\n  data: TOrderRenderData | undefined\n  withoutModal?: boolean\n}\n\nconst OrderDetailsItem: FC<Props> = ({ withoutModal, data }) => {\n  if (!data) {\n    return null;\n  }\n  const { name, status, fullIngredients, price, parsedTime, number } = data;\n\n  let statusStyles;\n  switch (status) {\n    case 'created':\n      statusStyles = { color: 'white', message: 'Создан' }\n      break\n    case 'pending':\n      statusStyles = { color: 'white', message: 'Готовится' }\n      break\n    case 'done':\n      statusStyles = { message: 'Выполнен' }\n      break\n    default:\n      statusStyles = { message: 'Создан' }\n      break\n  }\n\n  return (\n    <div className={styles.container} style={ withoutModal ? { marginBottom: '40px' } : {}}>\n      {withoutModal &&\n        <p\n          className='text text_type_digits-default'\n          style={{ textAlign: 'center' }}\n        >\n          #{number}\n        </p>\n      }\n      <h3 className='mt-5 mb-5 text text_type_main-medium'>{name}</h3>\n      <p className={`${styles.ready} text text_type_main-default mb-10`} style={{ color: statusStyles.color }}>{statusStyles.message}</p>\n      <p className='mt-5 mb-5 text text_type_main-medium'>Состав:</p>\n      <div className={`${styles.list} mb-10`}>\n        {fullIngredients.map((ingredient, idx) => {\n          return (\n            <div className={styles.ingredient} key={ingredient._id + idx}>\n              <div className={styles.ingredient_title}>\n                <div className={styles.image} style={{ backgroundImage: `url(${ingredient.image_large})` }}/>\n                <p className={`${styles.ingredient_name} text text_type_main-default`}>{ingredient.name}</p>\n              </div>\n              <div className={styles.price}>\n                <span className='text text_type_digits-default'>1 x {ingredient.price}</span>\n                <CurrencyIcon type='primary' />\n              </div>\n            </div>\n          )\n        })}\n      </div>\n      <div className={styles.ingredient}>\n        <span className='text text_type_main-default text_color_inactive'>{parsedTime}</span>\n        <div className={styles.price}>\n          <span className='text text_type_digits-default'>{price}</span>\n          <CurrencyIcon type='primary' />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(OrderDetailsItem);","import { memo, FC, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from '../services/hooks';\nimport NotFoundError from './not-found-error';\nimport { getOrderData } from '../helpers/orders-helper';\nimport OrderDetailsItem from '../components/order-details-item/order-details-item';\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_START } from '../services/constants/ws-actions';\nimport Loader from '../components/loader/loader';\n\n\nconst OrderPage: FC = () => {\n  const dispatch = useDispatch();\n  const { orderId } = useParams<{ orderId: string }>();\n  const { ingredientsList } = useSelector(state => state.ingredients);\n  const { ordersInfo } = useSelector(state => state.wsFeed);\n  const order = ordersInfo?.orders.find(item => item._id === orderId);\n  const orderData = order ? getOrderData(order, ingredientsList) : order;\n\n\n  useEffect(\n    () => {\n      dispatch({ type: WS_CONNECTION_START });\n      return () => {\n        dispatch({ type: WS_CONNECTION_CLOSED })\n      }\n    },\n    [dispatch]\n  );\n\n  if (!ordersInfo || !ingredientsList) {\n    return <Loader />\n  }\n\n  return (\n    <>\n      {\n        order ?\n          <div className='mt-20'>\n            <OrderDetailsItem data={orderData} withoutModal />\n          </div> :\n          <NotFoundError />\n      }\n    </>\n  )\n}\n\nexport default memo(OrderPage);","import React, { useEffect } from 'react';\nimport appStyles from './app.module.css'\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport AppHeader from '../app-header/app-header';\nimport { Login, Register, ForgotPassword, ResetPassword, Profile, NotFoundError } from '../../pages';\nimport ProtectedRoute from '../protected-route/protected-route';\nimport IngredientPage from '../../pages/ingredient';\nimport * as H from 'history';\nimport Modal from '../modal/modal';\nimport IngredientDetails from '../ingredient-details/ingredient-details';\nimport TBurgersDataTypes from '../../services/types/t-burgers-data-types';\nimport { useDispatch } from '../../services/hooks';\nimport { getIngredients } from '../../services/actions/ingredients';\nimport Feed from '../../pages/feed';\nimport Constructor from '../../pages/constructor';\nimport { TOrderRenderData } from '../../services/types/t-order-data';\nimport OrderPage from '../../pages/order';\nimport OrderDetailsItem from '../order-details-item/order-details-item';\n\ntype LocationState = {\n  background?: H.Location\n  ingredient?: TBurgersDataTypes\n  order?: TOrderRenderData\n}\n\nfunction App() {\n  const location = useLocation<LocationState>();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let background =\n    (history.action === 'PUSH' || history.action === 'REPLACE')\n    && location.state\n    && location.state.background;\n  const ingredient = location.state && location.state.ingredient;\n  const order = location.state && location.state.order;\n\n  useEffect(() => {\n    dispatch(getIngredients());\n  }, [dispatch]);\n\n  return (\n    <div className={appStyles.app} id=\"app\">\n      <AppHeader/>\n      <main className={appStyles.main}>\n        <Switch location={background || location}>\n          <Route path='/login'>\n            <Login />\n          </Route>\n          <Route path='/register'>\n            <Register />\n          </Route>\n          <Route path='/forgot-password'>\n            <ForgotPassword />\n          </Route>\n          <Route path='/reset-password'>\n            <ResetPassword />\n          </Route>\n          <Route exact path='/profile/orders/:orderId'>\n            <OrderPage />\n          </Route>\n          <ProtectedRoute path='/profile'>\n            <Profile />\n          </ProtectedRoute>\n          <Route path='/' exact>\n            <Constructor />\n          </Route>\n          <Route path='/feed' exact>\n            <Feed />\n          </Route>\n          <Route path='/ingredients/:ingredientId'>\n            <IngredientPage />\n          </Route>\n          <Route path='/feed/:orderId'>\n            <OrderPage />\n          </Route>\n          <Route path='*'>\n            <NotFoundError />\n          </Route>\n        </Switch>\n        {background &&\n          <Switch>\n            <Route\n              path='/ingredients/:ingredientId'\n              children={\n                <Modal heading='Детали ингредиента'>\n                  <IngredientDetails ingredient={ingredient}/>\n                </Modal>\n              }\n            />\n            <Route\n              path='/feed/:orderId'\n              children={\n                <Modal heading={`#${order?.number}`} headingType='digits' slim>\n                  <OrderDetailsItem data={order} />\n                </Modal>\n              }\n            />\n            <Route\n              path='/profile/orders/:orderId'\n              children={\n                <Modal heading={`#${order?.number}`} headingType='digits' slim>\n                  <OrderDetailsItem data={order} />\n                </Modal>\n              }\n            />\n          </Switch>\n        }\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import TBurgersDataTypes from '../types/t-burgers-data-types';\nimport { TIngredientsActions } from '../actions/ingredients';\n\nimport {\n  GET_INGREDIENTS_SUCCESS,\n  GET_INGREDIENTS_REQUEST,\n  GET_INGREDIENTS_FAILED,\n  ADD_CURRENT_INGREDIENT,\n  DELETE_CURRENT_INGREDIENT,\n} from '../constants/ingredients';\n\ntype TIngredientsState = {\n  ingredientsRequest: boolean;\n  ingredientsFailed: boolean;\n  ingredientsList: TBurgersDataTypes[],\n  currentIngredient: TBurgersDataTypes | null;\n}\n\nconst ingredientsState: TIngredientsState = {\n  ingredientsRequest: false,\n  ingredientsFailed: false,\n  ingredientsList: [],\n  currentIngredient: null,\n}\n\nexport const ingredientsReducer = (state = ingredientsState, action: TIngredientsActions) => {\n  switch (action.type) {\n    case GET_INGREDIENTS_REQUEST: {\n      return {\n        ...state,\n        ingredientsFailed: false,\n        ingredientsRequest: true,\n      }\n    }\n    case GET_INGREDIENTS_SUCCESS: {\n      return {\n        ...state,\n        ingredientsRequest: false,\n        ingredientsFailed: false,\n        ingredientsList: action.data\n      }\n    }\n    case GET_INGREDIENTS_FAILED: {\n      return {\n        ...state,\n        ingredientsRequest: false,\n        ingredientsFailed: true,\n        ingredientsList: [],\n      }\n    }\n    case ADD_CURRENT_INGREDIENT: {\n      return {\n        ...state,\n        currentIngredient: action.ingredient,\n      }\n    }\n    case DELETE_CURRENT_INGREDIENT: {\n      return {\n        ...state,\n        currentIngredient: null\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import { TOrderActions } from '../actions/order';\n\nimport {\n  DELETE_ORDER_ID,\n  PLACE_ORDER_FAILED,\n  PLACE_ORDER_REQUEST,\n  PLACE_ORDER_SUCCESS\n} from '../constants/order';\n\ntype TOrderInitialState = {\n  currentOrderRequest: boolean;\n  currentOrderFailed: boolean;\n  currentOrderId: string | null;\n}\n\nconst orderInitialState: TOrderInitialState = {\n  currentOrderRequest: false,\n  currentOrderFailed: false,\n  currentOrderId: null\n}\n\nexport const orderReducer = (state = orderInitialState, action: TOrderActions) => {\n  switch (action.type) {\n    case PLACE_ORDER_REQUEST: {\n      return {\n        ...state,\n        currentOrderRequest: true\n      }\n    }\n    case PLACE_ORDER_FAILED: {\n      return {\n        ...state,\n        currentOrderRequest: false,\n        currentOrderId: null,\n        currentOrderFailed: true\n      }\n    }\n    case PLACE_ORDER_SUCCESS: {\n      return {\n        ...state,\n        currentOrderRequest: false,\n        currentOrderFailed: false,\n        currentOrderId: action.id\n      }\n    }\n    case DELETE_ORDER_ID: {\n      return {\n        ...state,\n        currentOrderId: null\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {\n  ADD_INGREDIENT,\n  DELETE_INGREDIENT,\n  REWRITE_INGREDIENTS,\n} from '../constants/burger';\nimport TBurgersDataTypes from '../types/t-burgers-data-types';\nimport { TBurgerActions } from '../actions/burger';\n\ntype TBurgerConstructorInitialState = {\n  constructorItems: TBurgersDataTypes[];\n}\n\nconst burgerConstructorInitialState: TBurgerConstructorInitialState = {\n  constructorItems: [],\n}\n\nexport const constructorReducer = (state = burgerConstructorInitialState, action: TBurgerActions) => {\n  switch (action.type) {\n    case ADD_INGREDIENT: {\n      action.payload.uuid = String(action.payload._id + Math.random());\n      if (action.payload.type === 'bun') {\n        const filteredItems = state.constructorItems.filter(({ type }) => type !== 'bun');\n        return {\n          ...state,\n          constructorItems: [...filteredItems, action.payload, action.payload],\n        }\n      }\n      return {\n        ...state,\n        constructorItems: [...state.constructorItems, action.payload]\n      }\n    }\n    case DELETE_INGREDIENT: {\n      const newItems = [...state.constructorItems];\n      newItems.splice(newItems.findIndex(({ _id }) => _id === action.payload), 1);\n      return {\n        ...state,\n        constructorItems: [...newItems]\n      }\n    }\n    case REWRITE_INGREDIENTS: {\n      return {\n        ...state,\n        constructorItems: [...action.payload]\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {\n  REGISTER_USER_REQUEST,\n  REGISTER_USER_SUCCESS,\n  REGISTER_USER_FAILED,\n  LOGIN_USER_REQUEST,\n  LOGIN_USER_FAILED,\n  LOGIN_USER_SUCCESS,\n  LOGOUT_USER_SUCCESS,\n  LOGOUT_USER_REQUEST,\n  LOGOUT_USER_FAILED,\n  RESET_PASSWORD_REQUEST,\n  RESET_PASSWORD_FAILED,\n  RESET_PASSWORD_SUCCESS,\n  UPDATE_PASSWORD_REQUEST,\n  UPDATE_PASSWORD_FAILED,\n  UPDATE_PASSWORD_SUCCESS,\n  RESET_PASSWORD_CLEAR,\n  UPDATE_PASSWORD_CLEAR,\n  UPDATE_USER_REQUEST,\n  UPDATE_USER_FAILED,\n  UPDATE_USER_SUCCESS,\n} from '../constants/user';\nimport { TNewUserData } from '../types/auth-form-types';\nimport { TUserActions } from '../actions/user';\n\ntype TUserInitialState = {\n  currentUser: TNewUserData | null;\n  userRegisterRequest: boolean;\n  userRegisterFailed: boolean;\n  userLoginRequest: boolean;\n  userLoginFailed: boolean;\n  userLogoutRequest: boolean;\n  userLogoutFailed: boolean;\n  resetPasswordRequest: boolean;\n  resetPasswordSuccess: boolean;\n  resetPasswordFailed: boolean;\n  updatePasswordRequest: boolean;\n  updatePasswordSuccess: boolean;\n  updatePasswordFailed: boolean;\n  updateProfileRequest: boolean;\n  updateProfileSuccess: boolean;\n  updateProfileFailed: boolean;\n}\n\nconst userInitialState: TUserInitialState = {\n  currentUser: null,\n  userRegisterRequest: false,\n  userRegisterFailed: false,\n  userLoginRequest: false,\n  userLoginFailed: false,\n  userLogoutRequest: false,\n  userLogoutFailed: false,\n  resetPasswordRequest: false,\n  resetPasswordSuccess: false,\n  resetPasswordFailed: false,\n  updatePasswordRequest: false,\n  updatePasswordSuccess: false,\n  updatePasswordFailed: false,\n  updateProfileRequest: false,\n  updateProfileSuccess: false,\n  updateProfileFailed: false,\n}\n\nexport const userReducer = (state = userInitialState, action: TUserActions) => {\n  switch (action.type) {\n    case RESET_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        resetPasswordRequest: true,\n        resetPasswordSuccess: false,\n        resetPasswordFailed: false,\n      }\n    }\n    case RESET_PASSWORD_FAILED: {\n      return {\n        ...state,\n        resetPasswordRequest: false,\n        resetPasswordSuccess: false,\n        resetPasswordFailed: true\n      }\n    }\n    case RESET_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        resetPasswordRequest: false,\n        resetPasswordFailed: false,\n        resetPasswordSuccess: true,\n      }\n    }\n    case RESET_PASSWORD_CLEAR: {\n      return {\n        ...state,\n        resetPasswordSuccess: false,\n      }\n    }\n    case UPDATE_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        updatePasswordRequest: true,\n        updatePasswordSuccess: false,\n        updatePasswordFailed: false,\n      }\n    }\n    case UPDATE_PASSWORD_FAILED: {\n      return {\n        ...state,\n        updatePasswordRequest: false,\n        updatePasswordSuccess: false,\n        updatePasswordFailed: true,\n      }\n    }\n    case UPDATE_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        updatePasswordRequest: false,\n        updatePasswordFailed: false,\n        updatePasswordSuccess: true,\n      }\n    }\n    case UPDATE_PASSWORD_CLEAR: {\n      return {\n        ...state,\n        updatePasswordSuccess: false,\n      }\n    }\n    case REGISTER_USER_REQUEST: {\n      return {\n        ...state,\n        userRegisterFailed: false,\n        userRegisterRequest: true\n      }\n    }\n    case REGISTER_USER_FAILED: {\n      return {\n        ...state,\n        userRegisterRequest: false,\n        currentUser: null,\n        userRegisterFailed: true,\n      }\n    }\n    case REGISTER_USER_SUCCESS: {\n      return {\n        ...state,\n        userRegisterRequest: false,\n        userRegisterFailed: false,\n        currentUser: action.user,\n      }\n    }\n    case LOGIN_USER_REQUEST: {\n      return {\n        ...state,\n        userLoginFailed: false,\n        userLoginRequest: true,\n      }\n    }\n    case LOGIN_USER_FAILED: {\n      return {\n        ...state,\n        userLoginRequest: false,\n        userLoginFailed: true,\n        currentUser: null\n      }\n    }\n    case LOGIN_USER_SUCCESS: {\n      return {\n        ...state,\n        userLoginRequest: false,\n        userLoginFailed: false,\n        currentUser: action.user\n      }\n    }\n    case LOGOUT_USER_REQUEST: {\n      return {\n        ...state,\n        userLogoutRequest: true,\n      }\n    }\n    case LOGOUT_USER_FAILED: {\n      return {\n        ...state,\n        userLogoutRequest: false,\n        userLogoutFailed: true,\n      }\n    }\n    case LOGOUT_USER_SUCCESS: {\n      return {\n        ...state,\n        userLogoutRequest: false,\n        userLogoutFailed: false,\n        currentUser: null\n      }\n    }\n    case UPDATE_USER_REQUEST: {\n      return {\n        ...state,\n        updateProfileRequest: true,\n        updateProfileFailed: false,\n        updateProfileSuccess: false,\n      }\n    }\n    case UPDATE_USER_FAILED: {\n      return {\n        ...state,\n        updateProfileRequest: false,\n        updateProfileSuccess: false,\n        updateProfileFailed: true,\n      }\n    }\n    case UPDATE_USER_SUCCESS: {\n      return {\n        ...state,\n        updateProfileRequest: false,\n        updateProfileFailed: false,\n        updateProfileSuccess: true,\n        currentUser: action.user,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import {\n  WS_CONNECTION_ERROR,\n  WS_CONNECTION_SUCCESS,\n  WS_CONNECTION_CLOSED,\n  WS_GET_MESSAGE,\n  WS_CONNECTION_STOP,\n} from '../constants/ws-actions';\nimport { TOrdersInfo } from '../types/t-order-data';\nimport { TWsActions } from '../actions/ws-actions';\n\ntype TWsFeedInitialState = {\n  wsConnected: boolean\n  error?: { message: string } | null\n  ordersInfo: TOrdersInfo | null\n}\n\nconst initialState: TWsFeedInitialState = {\n  wsConnected: false,\n  error: null,\n  ordersInfo: null\n}\n\nexport const wsReducer = (state = initialState, action: TWsActions) => {\n  switch (action.type) {\n    case WS_CONNECTION_STOP:\n      return {\n        ...state,\n        error: undefined,\n        wsConnected: false,\n      }\n    case WS_CONNECTION_SUCCESS:\n      return {\n        ...state,\n        error: undefined,\n        wsConnected: true\n      };\n    case WS_CONNECTION_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        wsConnected: false\n      };\n    case WS_CONNECTION_CLOSED:\n      return {\n        ...state,\n        error: undefined,\n        wsConnected: false\n      };\n    case WS_GET_MESSAGE:\n      return {\n        ...state,\n        ordersInfo: action.payload,\n      }\n    default:\n      return state;\n  }\n}","import {\n  WS_CONNECTION_STOP_AUTH,\n  WS_CONNECTION_SUCCESS_AUTH,\n  WS_CONNECTION_CLOSED_AUTH,\n  WS_CONNECTION_ERROR_AUTH,\n  WS_GET_MESSAGE_AUTH,\n} from '../constants/ws-auth-actions';\nimport { TOrdersInfo } from '../types/t-order-data';\nimport { TWsAuthActions } from '../actions/ws-auth-actions';\n\ntype TWsAuthFeedInitialState = {\n  wsConnected: boolean\n  error?: { message: string } | null\n  ordersInfo: TOrdersInfo | null\n}\n\nconst initialState: TWsAuthFeedInitialState = {\n  wsConnected: false,\n  error: null,\n  ordersInfo: null\n}\n\nexport const wsAuthReducer = (state = initialState, action: TWsAuthActions) => {\n  switch (action.type) {\n    case WS_CONNECTION_STOP_AUTH:\n      return {\n        ...state,\n        error: undefined,\n        wsConnected: false,\n      }\n    case WS_CONNECTION_SUCCESS_AUTH:\n      return {\n        ...state,\n        error: undefined,\n        wsConnected: true\n      };\n    case WS_CONNECTION_ERROR_AUTH:\n      return {\n        ...state,\n        error: action.payload,\n        wsConnected: false\n      };\n    case WS_CONNECTION_CLOSED_AUTH:\n      return {\n        ...state,\n        error: undefined,\n        wsConnected: false\n      };\n    case WS_GET_MESSAGE_AUTH:\n      return {\n        ...state,\n        ordersInfo: action.payload,\n      }\n    default:\n      return state;\n  }\n}\n\n","import { combineReducers } from 'redux';\n\nimport { ingredientsReducer } from './ingredients-reducer';\nimport { orderReducer } from './order-reducer';\nimport { constructorReducer } from './burger-reducer';\n\nimport { userReducer } from './user-reducers';\nimport { wsReducer } from './ws-reducer';\nimport { wsAuthReducer } from './ws-auth-reducer';\n\nexport const rootReducer = combineReducers({\n  ingredients: ingredientsReducer,\n  order: orderReducer,\n  burger: constructorReducer,\n  user: userReducer,\n  wsFeed: wsReducer,\n  wsAuthFeed: wsAuthReducer,\n});","import type { Middleware, MiddlewareAPI } from 'redux';\nimport { getCookie } from '../helpers/tokens-helper';\nimport { TAppActions } from './types';\nimport { TWsActionTypes } from './actions/ws-actions';\nimport { TWsAuthActionTypes } from './actions/ws-auth-actions';\n\ntype TWsActions = TWsActionTypes | TWsAuthActionTypes;\n\nexport const socketMiddleWare = (wsUrl: string, wsActions: TWsActions, authorized?: boolean): Middleware => (store: MiddlewareAPI) => {\n    let socket: WebSocket | null = null;\n    return (next: (i: TAppActions) => void) => (action) => {\n      const { dispatch } = store;\n      const { type, payload } = action;\n      const { wsInit, onOpen, onError, onMessage, onClose, wsSendMessage, wsStop } = wsActions;\n      const token = authorized ? getCookie('token') : null;\n\n      if (type === wsInit) {\n        socket = token ? new WebSocket(`${wsUrl}?token=${token}`) : new WebSocket(wsUrl);\n      }\n\n      if (socket) {\n        socket.onopen = () => {\n          dispatch({ type: onOpen });\n        };\n        socket.onerror = event => {\n          dispatch({ type: onError, payload: event });\n        };\n        socket.onmessage = event => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n          const { success, ...restParsedData } = parsedData;\n          dispatch({ type: onMessage, payload: restParsedData });\n        };\n        socket.onclose = () => {\n          dispatch({ type: onClose });\n        };\n        if (socket && type === wsSendMessage) {\n          const { message } = payload;\n          socket.send(JSON.stringify(message));\n        }\n        if (socket && type === wsStop) {\n          socket.close(1000, 'socket closed');\n        }\n      }\n      next(action);\n    }\n\n}","import {\n  WS_CONNECTION_START,\n  WS_CONNECTION_STOP,\n  WS_CONNECTION_CLOSED,\n  WS_CONNECTION_ERROR,\n  WS_CONNECTION_SUCCESS,\n  WS_GET_MESSAGE,\n  WS_SEND_MESSAGE,\n} from '../constants/ws-actions';\nimport { TOrdersInfo } from '../types/t-order-data';\nimport TBurgersDataTypes from '../types/t-burgers-data-types';\n\nexport type TWsActionTypes = {\n  wsInit: typeof WS_CONNECTION_START,\n  wsStop: typeof WS_CONNECTION_STOP,\n  onOpen: typeof WS_CONNECTION_SUCCESS,\n  onClose: typeof WS_CONNECTION_CLOSED,\n  onError: typeof WS_CONNECTION_ERROR,\n  onMessage: typeof WS_GET_MESSAGE,\n  wsSendMessage: typeof WS_SEND_MESSAGE,\n}\n\nexport const wsActions = {\n  wsInit: WS_CONNECTION_START,\n  wsStop: WS_CONNECTION_STOP,\n  onOpen: WS_CONNECTION_SUCCESS,\n  onClose: WS_CONNECTION_CLOSED,\n  onError: WS_CONNECTION_ERROR,\n  onMessage: WS_GET_MESSAGE,\n  wsSendMessage: WS_SEND_MESSAGE,\n};\n\nexport interface IWsConnectionStartAction {\n  readonly type: typeof WS_CONNECTION_START;\n}\n\nexport interface IWsConnectionStopAction {\n  readonly type: typeof WS_CONNECTION_STOP;\n}\n\nexport interface IWsConnectionSuccessAction {\n  readonly type: typeof WS_CONNECTION_SUCCESS;\n}\n\nexport interface IWsConnectionErrorAction {\n  readonly type: typeof WS_CONNECTION_ERROR;\n  readonly payload: { message: string }\n}\n\nexport interface IWsConnectionClosedAction {\n  readonly type: typeof WS_CONNECTION_CLOSED;\n}\n\nexport interface IWsGetMessageAction {\n  readonly type: typeof WS_GET_MESSAGE;\n  readonly payload: TOrdersInfo\n}\n\nexport interface IWsSendMessageAction {\n  readonly type: typeof WS_SEND_MESSAGE;\n  readonly payload: TBurgersDataTypes[]\n}\n\nexport type TWsActions =\n  IWsConnectionStartAction\n  | IWsConnectionStopAction\n  | IWsConnectionSuccessAction\n  | IWsConnectionErrorAction\n  | IWsConnectionClosedAction\n  | IWsGetMessageAction\n  | IWsSendMessageAction\n\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport {\n  WS_CONNECTION_START_AUTH,\n  WS_CONNECTION_STOP_AUTH,\n  WS_CONNECTION_ERROR_AUTH,\n  WS_CONNECTION_SUCCESS_AUTH,\n  WS_CONNECTION_CLOSED_AUTH,\n  WS_GET_MESSAGE_AUTH,\n  WS_SEND_MESSAGE_AUTH,\n} from '../constants/ws-auth-actions';\nimport { TOrdersInfo } from '../types/t-order-data';\n\nexport type TWsAuthActionTypes = {\n  wsInit: typeof WS_CONNECTION_START_AUTH,\n  wsStop: typeof WS_CONNECTION_STOP_AUTH,\n  onOpen: typeof WS_CONNECTION_SUCCESS_AUTH,\n  onClose: typeof WS_CONNECTION_CLOSED_AUTH,\n  onError: typeof WS_CONNECTION_ERROR_AUTH,\n  onMessage: typeof WS_GET_MESSAGE_AUTH,\n  wsSendMessage: typeof WS_SEND_MESSAGE_AUTH,\n}\n\nexport const wsAuthActions = {\n  wsInit: WS_CONNECTION_START_AUTH,\n  wsStop: WS_CONNECTION_STOP_AUTH,\n  onOpen: WS_CONNECTION_SUCCESS_AUTH,\n  onClose: WS_CONNECTION_CLOSED_AUTH,\n  onError: WS_CONNECTION_ERROR_AUTH,\n  onMessage: WS_GET_MESSAGE_AUTH,\n  wsSendMessage: WS_SEND_MESSAGE_AUTH,\n}\n\nexport interface IWsAuthConnectionStartAction {\n  readonly type: typeof WS_CONNECTION_START_AUTH;\n}\n\nexport interface IWsAuthConnectionStopAction {\n  readonly type: typeof WS_CONNECTION_STOP_AUTH;\n}\n\nexport interface IWsAuthConnectionSuccessAction {\n  readonly type: typeof WS_CONNECTION_SUCCESS_AUTH;\n}\n\nexport interface IWsAuthConnectionErrorAction {\n  readonly type: typeof WS_CONNECTION_ERROR_AUTH;\n  readonly payload: { message: string };\n}\n\nexport interface IWsAuthConnectionClosedAction {\n  readonly type: typeof WS_CONNECTION_CLOSED_AUTH;\n}\n\nexport interface IWsAuthGetMessageAction {\n  readonly type: typeof WS_GET_MESSAGE_AUTH;\n  readonly payload: TOrdersInfo\n}\n\nexport interface IWsAuthSendMessageAction {\n  readonly type: typeof WS_SEND_MESSAGE_AUTH;\n  readonly payload: PayloadAction;\n}\n\nexport type TWsAuthActions =\n  IWsAuthConnectionStartAction\n  | IWsAuthConnectionStopAction\n  | IWsAuthConnectionSuccessAction\n  | IWsAuthConnectionErrorAction\n  | IWsAuthConnectionClosedAction\n  | IWsAuthGetMessageAction\n  | IWsAuthSendMessageAction","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\nimport { socketMiddleWare } from './middlewares';\nimport { API_WS_ALL, API_WS_AUTH } from './constants/api-config';\nimport { wsActions } from './actions/ws-actions';\nimport { wsAuthActions } from './actions/ws-auth-actions';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleWare(API_WS_ALL, wsActions), socketMiddleWare(API_WS_AUTH, wsAuthActions, true)));\n\nexport const store = createStore(rootReducer, enhancer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { store } from './services/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename='/react-burger'>\n        <App/>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__2BbXp\",\"menu\":\"profile_menu__xxfx5\",\"navigation\":\"profile_navigation__fWhM0\",\"list\":\"profile_list__2lI8E\",\"list_item\":\"profile_list_item__1957-\",\"link\":\"profile_link__1-1p8\",\"link_active\":\"profile_link_active__F7ryI\",\"form_container\":\"profile_form_container__wsgWg\",\"form\":\"profile_form__3yKlC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-details-item_container__2j1ep\",\"list\":\"order-details-item_list__2BCpc\",\"ready\":\"order-details-item_ready__4WjWN\",\"ingredient\":\"order-details-item_ingredient__1IT-C\",\"ingredient_title\":\"order-details-item_ingredient_title__21Qgn\",\"ingredient_name\":\"order-details-item_ingredient_name__XB_NP\",\"image\":\"order-details-item_image__2D2wL\",\"price\":\"order-details-item_price__1yrDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orders-list-item_container__64U9j\",\"credentials\":\"orders-list-item_credentials__1mHA5\",\"ingredients\":\"orders-list-item_ingredients__36tC_\",\"price\":\"orders-list-item_price__1vIiO\",\"images\":\"orders-list-item_images__2PnVw\",\"image\":\"orders-list-item_image__etwhK\",\"image_excess\":\"orders-list-item_image_excess__3ry1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"ingredient-details_details__uP6-A\",\"image\":\"ingredient-details_image__H2-xP\",\"nutrients\":\"ingredient-details_nutrients__3DmXA\",\"subtitle\":\"ingredient-details_subtitle__22Z-d\",\"text\":\"ingredient-details_text__1jgQH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"auth-form_container__m7eNv\",\"form\":\"auth-form_form__1d4QB\",\"link\":\"auth-form_link__a660i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"modal_container__3GddM\",\"header\":\"modal_header__2iX3r\",\"heading\":\"modal_heading__3ro6V\",\"order\":\"modal_order__FFKoR\",\"check\":\"modal_check__2tXHp\",\"text\":\"modal_text__1Kop1\",\"details\":\"modal_details__2vl82\",\"image\":\"modal_image__nuFwr\",\"nutrients\":\"modal_nutrients__8PBW7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"glow\":\"orders-info_glow__QZI6k\",\"ready\":\"orders-info_ready__3eBjg\",\"list\":\"orders-info_list__19AXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"oder-details_order__3SJRp\",\"subtitle\":\"oder-details_subtitle__GA6Wg\",\"check\":\"oder-details_check__2R33x\",\"text\":\"oder-details_text__2Q7iS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app-header_container__2ER_-\",\"navigation\":\"app-header_navigation__cmFMn\",\"list\":\"app-header_list__q5yDi\",\"logo\":\"app-header_logo__zVEfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"burger-ingredients-item_container__1Q9aJ\",\"price\":\"burger-ingredients-item_price__Mcqf0\",\"title\":\"burger-ingredients-item_title__mOAw6\",\"counter\":\"burger-ingredients-item_counter__2cM8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"burger-constructor_container__332QY\",\"bordered\":\"burger-constructor_bordered__3eru0\",\"items\":\"burger-constructor_items__2egos\",\"price\":\"burger-constructor_price__Q5cGy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"burger-ingredients_tabs__1yNyE\",\"sections\":\"burger-ingredients_sections__2-wIo\",\"items\":\"burger-ingredients_items__ff6d6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__M9MMq\",\"main\":\"app_main__3yfFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"header-item_link__5dJ7M\",\"link_active\":\"header-item_link_active__3goST\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loader_container__oUJCN\",\"loader\":\"loader_loader__31U88\",\"rotate\":\"loader_rotate__2RGOz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sections\":\"orders-list_sections__pMbmh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"modal-overlay_container__2nzUA\"};"],"sourceRoot":""}